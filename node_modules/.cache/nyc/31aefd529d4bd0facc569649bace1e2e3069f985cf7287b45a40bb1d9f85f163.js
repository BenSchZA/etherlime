var cov_2ofkmmlyeq=function(){var path="/Users/desimiramitkova/Projects/etherlime/packages/etherlime/cli-commands/zk-proof/verify-proof.js";var hash="7b065a2fbeb5c40c328d4a64b7a4b57402a9dd08";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/desimiramitkova/Projects/etherlime/packages/etherlime/cli-commands/zk-proof/verify-proof.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:34}},"1":{start:{line:2,column:11},end:{line:2,column:24}},"2":{start:{line:3,column:12},end:{line:3,column:31}},"3":{start:{line:4,column:13},end:{line:4,column:28}},"4":{start:{line:6,column:27},end:{line:6,column:67}},"5":{start:{line:7,column:25},end:{line:7,column:63}},"6":{start:{line:8,column:22},end:{line:8,column:61}},"7":{start:{line:10,column:12},end:{line:19,column:1}},"8":{start:{line:11,column:23},end:{line:11,column:83}},"9":{start:{line:12,column:24},end:{line:12,column:112}},"10":{start:{line:13,column:21},end:{line:13,column:102}},"11":{start:{line:15,column:1},end:{line:15,column:36}},"12":{start:{line:17,column:1},end:{line:17,column:63}},"13":{start:{line:18,column:1},end:{line:18,column:74}},"14":{start:{line:21,column:28},end:{line:26,column:1}},"15":{start:{line:22,column:1},end:{line:25,column:2}},"16":{start:{line:23,column:2},end:{line:23,column:57}},"17":{start:{line:24,column:2},end:{line:24,column:27}},"18":{start:{line:28,column:20},end:{line:38,column:1}},"19":{start:{line:29,column:1},end:{line:29,column:44}},"20":{start:{line:30,column:18},end:{line:30,column:92}},"21":{start:{line:31,column:19},end:{line:31,column:39}},"22":{start:{line:32,column:16},end:{line:35,column:2}},"23":{start:{line:37,column:1},end:{line:37,column:91}},"24":{start:{line:40,column:0},end:{line:42,column:1}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:10,column:12},end:{line:10,column:13}},loc:{start:{line:10,column:42},end:{line:19,column:1}},line:10},"1":{name:"(anonymous_1)",decl:{start:{line:21,column:28},end:{line:21,column:29}},loc:{start:{line:21,column:44},end:{line:26,column:1}},line:21},"2":{name:"(anonymous_2)",decl:{start:{line:28,column:20},end:{line:28,column:21}},loc:{start:{line:28,column:74},end:{line:38,column:1}},line:28}},branchMap:{"0":{loc:{start:{line:22,column:1},end:{line:25,column:2}},type:"if",locations:[{start:{line:22,column:1},end:{line:25,column:2}},{start:{line:22,column:1},end:{line:25,column:2}}],line:22}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"7b065a2fbeb5c40c328d4a64b7a4b57402a9dd08"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const zkSnark=(cov_2ofkmmlyeq.s[0]++,require("snarkjs"));const fs=(cov_2ofkmmlyeq.s[1]++,require("fs"));const dir=(cov_2ofkmmlyeq.s[2]++,require("node-dir"));const path=(cov_2ofkmmlyeq.s[3]++,require("path"));const generatedProofPath=(cov_2ofkmmlyeq.s[4]++,'./zero-knowledge-proof/generated-proof');const trustedSetupPath=(cov_2ofkmmlyeq.s[5]++,'./zero-knowledge-proof/trusted-setup');const verifiedProof=(cov_2ofkmmlyeq.s[6]++,'./zero-knowledge-proof/verified-proof');cov_2ofkmmlyeq.s[7]++;const run=async(signals,proof,vk)=>{cov_2ofkmmlyeq.f[0]++;const publicSignals=(cov_2ofkmmlyeq.s[8]++,require(`${process.cwd()}/${generatedProofPath}/${signals}`));const generatedProof=(cov_2ofkmmlyeq.s[9]++,zkSnark.unstringifyBigInts(require(`${process.cwd()}/${generatedProofPath}/${proof}`)));const verifierKey=(cov_2ofkmmlyeq.s[10]++,zkSnark.unstringifyBigInts(require(`${process.cwd()}/${trustedSetupPath}/${vk}`)));cov_2ofkmmlyeq.s[11]++;createZKProofFolder(verifiedProof);cov_2ofkmmlyeq.s[12]++;await verifyProof(publicSignals,generatedProof,verifierKey);cov_2ofkmmlyeq.s[13]++;console.log('===== Verifying Completed. Please check output.json =====');};cov_2ofkmmlyeq.s[14]++;const createZKProofFolder=folderPath=>{cov_2ofkmmlyeq.f[1]++;cov_2ofkmmlyeq.s[15]++;if(!fs.existsSync(folderPath)){cov_2ofkmmlyeq.b[0][0]++;cov_2ofkmmlyeq.s[16]++;console.log('===== Creating ZK Verifier folder =====');cov_2ofkmmlyeq.s[17]++;fs.mkdirSync(folderPath);}else{cov_2ofkmmlyeq.b[0][1]++;}};cov_2ofkmmlyeq.s[18]++;const verifyProof=async(publicSignals,generatedProof,verifierKey)=>{cov_2ofkmmlyeq.f[2]++;cov_2ofkmmlyeq.s[19]++;console.log('===== Verifying Proof =====');const verified=(cov_2ofkmmlyeq.s[20]++,await zkSnark.original.isValid(verifierKey,generatedProof,publicSignals));const timestamp=(cov_2ofkmmlyeq.s[21]++,new Date().getTime());const object=(cov_2ofkmmlyeq.s[22]++,{verified,timestamp});cov_2ofkmmlyeq.s[23]++;fs.writeFileSync(`${verifiedProof}/output.json`,JSON.stringify(object,null,1),"utf8");};cov_2ofkmmlyeq.s[24]++;module.exports={run};