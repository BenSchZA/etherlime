var cov_4r7192qsi=function(){var path="/Users/desimiramitkova/Projects/etherlime/cli-commands/compiler/etherlime-compile/compilerSupplier.js";var hash="d610dbb5f3508d3fd6e0e77604a1127b224f0428";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/desimiramitkova/Projects/etherlime/cli-commands/compiler/etherlime-compile/compilerSupplier.js",statementMap:{"0":{start:{line:1,column:13},end:{line:1,column:28}},"1":{start:{line:2,column:11},end:{line:2,column:24}},"2":{start:{line:3,column:14},end:{line:3,column:38}},"3":{start:{line:4,column:16},end:{line:4,column:42}},"4":{start:{line:5,column:26},end:{line:5,column:56}},"5":{start:{line:6,column:21},end:{line:6,column:46}},"6":{start:{line:7,column:24},end:{line:7,column:51}},"7":{start:{line:8,column:17},end:{line:8,column:40}},"8":{start:{line:15,column:8},end:{line:15,column:32}},"9":{start:{line:16,column:8},end:{line:22,column:9}},"10":{start:{line:23,column:8},end:{line:23,column:58}},"11":{start:{line:25,column:8},end:{line:29,column:11}},"12":{start:{line:42,column:21},end:{line:42,column:25}},"13":{start:{line:43,column:24},end:{line:43,column:43}},"14":{start:{line:46,column:32},end:{line:46,column:50}},"15":{start:{line:49,column:8},end:{line:61,column:11}},"16":{start:{line:50,column:30},end:{line:50,column:48}},"17":{start:{line:51,column:40},end:{line:51,column:48}},"18":{start:{line:52,column:42},end:{line:52,column:94}},"19":{start:{line:53,column:29},end:{line:53,column:74}},"20":{start:{line:54,column:30},end:{line:54,column:39}},"21":{start:{line:56,column:12},end:{line:56,column:66}},"22":{start:{line:56,column:27},end:{line:56,column:66}},"23":{start:{line:57,column:12},end:{line:57,column:64}},"24":{start:{line:57,column:26},end:{line:57,column:64}},"25":{start:{line:58,column:12},end:{line:58,column:85}},"26":{start:{line:58,column:39},end:{line:58,column:85}},"27":{start:{line:59,column:12},end:{line:59,column:79}},"28":{start:{line:59,column:37},end:{line:59,column:79}},"29":{start:{line:60,column:12},end:{line:60,column:65}},"30":{start:{line:60,column:27},end:{line:60,column:65}},"31":{start:{line:66,column:8},end:{line:82,column:15}},"32":{start:{line:70,column:36},end:{line:73,column:55}},"33":{start:{line:72,column:37},end:{line:72,column:56}},"34":{start:{line:73,column:34},end:{line:73,column:54}},"35":{start:{line:75,column:33},end:{line:75,column:59}},"36":{start:{line:77,column:16},end:{line:81,column:17}},"37":{start:{line:86,column:21},end:{line:86,column:25}},"38":{start:{line:87,column:8},end:{line:94,column:72}},"39":{start:{line:89,column:16},end:{line:92,column:43}},"40":{start:{line:92,column:33},end:{line:92,column:42}},"41":{start:{line:94,column:28},end:{line:94,column:68}},"42":{start:{line:99,column:25},end:{line:99,column:40}},"43":{start:{line:100,column:8},end:{line:100,column:30}},"44":{start:{line:102,column:8},end:{line:102,column:24}},"45":{start:{line:110,column:21},end:{line:110,column:25}},"46":{start:{line:113,column:8},end:{line:118,column:9}},"47":{start:{line:114,column:12},end:{line:114,column:49}},"48":{start:{line:115,column:12},end:{line:115,column:34}},"49":{start:{line:117,column:12},end:{line:117,column:51}},"50":{start:{line:120,column:8},end:{line:120,column:24}},"51":{start:{line:124,column:21},end:{line:124,column:25}},"52":{start:{line:125,column:8},end:{line:127,column:92}},"53":{start:{line:126,column:26},end:{line:126,column:42}},"54":{start:{line:127,column:28},end:{line:127,column:88}},"55":{start:{line:136,column:8},end:{line:136,column:80}},"56":{start:{line:136,column:43},end:{line:136,column:80}},"57":{start:{line:138,column:29},end:{line:138,column:86}},"58":{start:{line:140,column:8},end:{line:148,column:9}},"59":{start:{line:141,column:12},end:{line:147,column:13}},"60":{start:{line:142,column:31},end:{line:144,column:52}},"61":{start:{line:146,column:16},end:{line:146,column:49}},"62":{start:{line:146,column:28},end:{line:146,column:49}},"63":{start:{line:150,column:8},end:{line:150,column:20}},"64":{start:{line:157,column:21},end:{line:157,column:25}},"65":{start:{line:159,column:8},end:{line:176,column:15}},"66":{start:{line:162,column:29},end:{line:162,column:76}},"67":{start:{line:164,column:16},end:{line:164,column:67}},"68":{start:{line:164,column:27},end:{line:164,column:67}},"69":{start:{line:166,column:16},end:{line:166,column:72}},"70":{start:{line:166,column:41},end:{line:166,column:72}},"71":{start:{line:168,column:28},end:{line:168,column:62}},"72":{start:{line:169,column:16},end:{line:175,column:80}},"73":{start:{line:172,column:24},end:{line:172,column:56}},"74":{start:{line:173,column:24},end:{line:173,column:65}},"75":{start:{line:175,column:36},end:{line:175,column:76}},"76":{start:{line:186,column:8},end:{line:191,column:9}},"77":{start:{line:188,column:16},end:{line:188,column:54}},"78":{start:{line:189,column:16},end:{line:189,column:100}},"79":{start:{line:190,column:16},end:{line:190,column:22}},"80":{start:{line:193,column:23},end:{line:193,column:63}},"81":{start:{line:195,column:8},end:{line:203,column:15}},"82":{start:{line:198,column:16},end:{line:202,column:17}},"83":{start:{line:199,column:42},end:{line:199,column:93}},"84":{start:{line:200,column:35},end:{line:200,column:48}},"85":{start:{line:213,column:8},end:{line:213,column:40}},"86":{start:{line:217,column:22},end:{line:217,column:41}},"87":{start:{line:218,column:25},end:{line:218,column:43}},"88":{start:{line:221,column:8},end:{line:224,column:9}},"89":{start:{line:222,column:30},end:{line:222,column:57}},"90":{start:{line:223,column:12},end:{line:223,column:55}},"91":{start:{line:227,column:8},end:{line:227,column:57}},"92":{start:{line:227,column:20},end:{line:227,column:57}},"93":{start:{line:230,column:8},end:{line:234,column:9}},"94":{start:{line:231,column:12},end:{line:231,column:40}},"95":{start:{line:233,column:12},end:{line:233,column:42}},"96":{start:{line:237,column:8},end:{line:241,column:9}},"97":{start:{line:238,column:12},end:{line:238,column:81}},"98":{start:{line:240,column:12},end:{line:240,column:48}},"99":{start:{line:244,column:24},end:{line:244,column:90}},"100":{start:{line:245,column:27},end:{line:245,column:57}},"101":{start:{line:246,column:8},end:{line:246,column:46}},"102":{start:{line:248,column:8},end:{line:248,column:26}},"103":{start:{line:262,column:8},end:{line:262,column:68}},"104":{start:{line:269,column:8},end:{line:269,column:34}},"105":{start:{line:270,column:8},end:{line:270,column:44}},"106":{start:{line:277,column:22},end:{line:277,column:86}},"107":{start:{line:279,column:8},end:{line:279,column:31}},"108":{start:{line:286,column:21},end:{line:286,column:48}},"109":{start:{line:287,column:8},end:{line:287,column:35}},"110":{start:{line:295,column:8},end:{line:295,column:39}},"111":{start:{line:295,column:32},end:{line:295,column:39}},"112":{start:{line:296,column:25},end:{line:296,column:52}},"113":{start:{line:297,column:8},end:{line:297,column:41}},"114":{start:{line:304,column:25},end:{line:304,column:52}},"115":{start:{line:305,column:24},end:{line:305,column:49}},"116":{start:{line:306,column:24},end:{line:306,column:41}},"117":{start:{line:307,column:8},end:{line:307,column:30}},"118":{start:{line:309,column:8},end:{line:309,column:23}},"119":{start:{line:316,column:24},end:{line:316,column:47}},"120":{start:{line:317,column:24},end:{line:317,column:41}},"121":{start:{line:318,column:8},end:{line:318,column:30}},"122":{start:{line:320,column:8},end:{line:320,column:23}},"123":{start:{line:324,column:26},end:{line:324,column:64}},"124":{start:{line:325,column:33},end:{line:325,column:64}},"125":{start:{line:327,column:8},end:{line:329,column:9}},"126":{start:{line:328,column:12},end:{line:328,column:74}},"127":{start:{line:333,column:21},end:{line:333,column:80}},"128":{start:{line:335,column:22},end:{line:350,column:9}},"129":{start:{line:352,column:8},end:{line:352,column:38}},"130":{start:{line:359,column:0},end:{line:361,column:1}},"131":{start:{line:360,column:4},end:{line:360,column:48}},"132":{start:{line:363,column:0},end:{line:363,column:34}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:14,column:4},end:{line:14,column:5}},loc:{start:{line:14,column:25},end:{line:30,column:5}},line:14},"1":{name:"(anonymous_1)",decl:{start:{line:41,column:4},end:{line:41,column:5}},loc:{start:{line:41,column:11},end:{line:62,column:5}},line:41},"2":{name:"(anonymous_2)",decl:{start:{line:49,column:27},end:{line:49,column:28}},loc:{start:{line:49,column:47},end:{line:61,column:9}},line:49},"3":{name:"(anonymous_3)",decl:{start:{line:65,column:4},end:{line:65,column:5}},loc:{start:{line:65,column:18},end:{line:83,column:5}},line:65},"4":{name:"(anonymous_4)",decl:{start:{line:68,column:18},end:{line:68,column:19}},loc:{start:{line:68,column:26},end:{line:82,column:13}},line:68},"5":{name:"(anonymous_5)",decl:{start:{line:72,column:28},end:{line:72,column:29}},loc:{start:{line:72,column:37},end:{line:72,column:56}},line:72},"6":{name:"(anonymous_6)",decl:{start:{line:73,column:25},end:{line:73,column:26}},loc:{start:{line:73,column:34},end:{line:73,column:54}},line:73},"7":{name:"(anonymous_7)",decl:{start:{line:85,column:4},end:{line:85,column:5}},loc:{start:{line:85,column:20},end:{line:95,column:5}},line:85},"8":{name:"(anonymous_8)",decl:{start:{line:88,column:18},end:{line:88,column:19}},loc:{start:{line:89,column:16},end:{line:92,column:43}},line:89},"9":{name:"(anonymous_9)",decl:{start:{line:92,column:25},end:{line:92,column:26}},loc:{start:{line:92,column:33},end:{line:92,column:42}},line:92},"10":{name:"(anonymous_10)",decl:{start:{line:94,column:19},end:{line:94,column:20}},loc:{start:{line:94,column:26},end:{line:94,column:70}},line:94},"11":{name:"(anonymous_11)",decl:{start:{line:98,column:4},end:{line:98,column:5}},loc:{start:{line:98,column:26},end:{line:103,column:5}},line:98},"12":{name:"(anonymous_12)",decl:{start:{line:109,column:4},end:{line:109,column:5}},loc:{start:{line:109,column:24},end:{line:121,column:5}},line:109},"13":{name:"(anonymous_13)",decl:{start:{line:123,column:4},end:{line:123,column:5}},loc:{start:{line:123,column:18},end:{line:128,column:5}},line:123},"14":{name:"(anonymous_14)",decl:{start:{line:126,column:18},end:{line:126,column:19}},loc:{start:{line:126,column:26},end:{line:126,column:42}},line:126},"15":{name:"(anonymous_15)",decl:{start:{line:127,column:19},end:{line:127,column:20}},loc:{start:{line:127,column:26},end:{line:127,column:90}},line:127},"16":{name:"(anonymous_16)",decl:{start:{line:135,column:4},end:{line:135,column:5}},loc:{start:{line:135,column:47},end:{line:151,column:5}},line:135},"17":{name:"(anonymous_17)",decl:{start:{line:156,column:4},end:{line:156,column:5}},loc:{start:{line:156,column:22},end:{line:177,column:5}},line:156},"18":{name:"(anonymous_18)",decl:{start:{line:161,column:18},end:{line:161,column:19}},loc:{start:{line:161,column:33},end:{line:176,column:13}},line:161},"19":{name:"(anonymous_19)",decl:{start:{line:171,column:26},end:{line:171,column:27}},loc:{start:{line:171,column:38},end:{line:174,column:21}},line:171},"20":{name:"(anonymous_20)",decl:{start:{line:175,column:27},end:{line:175,column:28}},loc:{start:{line:175,column:34},end:{line:175,column:78}},line:175},"21":{name:"(anonymous_21)",decl:{start:{line:182,column:4},end:{line:182,column:5}},loc:{start:{line:182,column:24},end:{line:204,column:5}},line:182},"22":{name:"(anonymous_22)",decl:{start:{line:197,column:18},end:{line:197,column:19}},loc:{start:{line:197,column:28},end:{line:203,column:13}},line:197},"23":{name:"(anonymous_23)",decl:{start:{line:199,column:29},end:{line:199,column:30}},loc:{start:{line:199,column:42},end:{line:199,column:93}},line:199},"24":{name:"(anonymous_24)",decl:{start:{line:200,column:29},end:{line:200,column:30}},loc:{start:{line:200,column:35},end:{line:200,column:48}},line:200},"25":{name:"(anonymous_25)",decl:{start:{line:211,column:4},end:{line:211,column:5}},loc:{start:{line:211,column:23},end:{line:214,column:5}},line:211},"26":{name:"(anonymous_26)",decl:{start:{line:216,column:4},end:{line:216,column:5}},loc:{start:{line:216,column:21},end:{line:249,column:5}},line:216},"27":{name:"(anonymous_27)",decl:{start:{line:261,column:4},end:{line:261,column:5}},loc:{start:{line:261,column:40},end:{line:263,column:5}},line:261},"28":{name:"(anonymous_28)",decl:{start:{line:268,column:4},end:{line:268,column:5}},loc:{start:{line:268,column:30},end:{line:271,column:5}},line:268},"29":{name:"(anonymous_29)",decl:{start:{line:276,column:4},end:{line:276,column:5}},loc:{start:{line:276,column:27},end:{line:280,column:5}},line:276},"30":{name:"(anonymous_30)",decl:{start:{line:285,column:4},end:{line:285,column:5}},loc:{start:{line:285,column:23},end:{line:288,column:5}},line:285},"31":{name:"(anonymous_31)",decl:{start:{line:294,column:4},end:{line:294,column:5}},loc:{start:{line:294,column:31},end:{line:298,column:5}},line:294},"32":{name:"(anonymous_32)",decl:{start:{line:303,column:4},end:{line:303,column:5}},loc:{start:{line:303,column:27},end:{line:310,column:5}},line:303},"33":{name:"(anonymous_33)",decl:{start:{line:315,column:4},end:{line:315,column:5}},loc:{start:{line:315,column:29},end:{line:321,column:5}},line:315},"34":{name:"(anonymous_34)",decl:{start:{line:323,column:4},end:{line:323,column:5}},loc:{start:{line:323,column:21},end:{line:330,column:5}},line:323},"35":{name:"(anonymous_35)",decl:{start:{line:332,column:4},end:{line:332,column:5}},loc:{start:{line:332,column:29},end:{line:353,column:5}},line:332},"36":{name:"(anonymous_36)",decl:{start:{line:359,column:19},end:{line:359,column:20}},loc:{start:{line:359,column:25},end:{line:361,column:1}},line:359}},branchMap:{"0":{loc:{start:{line:15,column:18},end:{line:15,column:31}},type:"binary-expr",locations:[{start:{line:15,column:18},end:{line:15,column:25}},{start:{line:15,column:29},end:{line:15,column:31}}],line:15},"1":{loc:{start:{line:52,column:42},end:{line:52,column:94}},type:"binary-expr",locations:[{start:{line:52,column:42},end:{line:52,column:61}},{start:{line:52,column:65},end:{line:52,column:94}}],line:52},"2":{loc:{start:{line:53,column:29},end:{line:53,column:74}},type:"binary-expr",locations:[{start:{line:53,column:29},end:{line:53,column:49}},{start:{line:53,column:53},end:{line:53,column:74}}],line:53},"3":{loc:{start:{line:56,column:12},end:{line:56,column:66}},type:"if",locations:[{start:{line:56,column:12},end:{line:56,column:66}},{start:{line:56,column:12},end:{line:56,column:66}}],line:56},"4":{loc:{start:{line:57,column:12},end:{line:57,column:64}},type:"if",locations:[{start:{line:57,column:12},end:{line:57,column:64}},{start:{line:57,column:12},end:{line:57,column:64}}],line:57},"5":{loc:{start:{line:58,column:12},end:{line:58,column:85}},type:"if",locations:[{start:{line:58,column:12},end:{line:58,column:85}},{start:{line:58,column:12},end:{line:58,column:85}}],line:58},"6":{loc:{start:{line:59,column:12},end:{line:59,column:79}},type:"if",locations:[{start:{line:59,column:12},end:{line:59,column:79}},{start:{line:59,column:12},end:{line:59,column:79}}],line:59},"7":{loc:{start:{line:60,column:12},end:{line:60,column:65}},type:"if",locations:[{start:{line:60,column:12},end:{line:60,column:65}},{start:{line:60,column:12},end:{line:60,column:65}}],line:60},"8":{loc:{start:{line:136,column:8},end:{line:136,column:80}},type:"if",locations:[{start:{line:136,column:8},end:{line:136,column:80}},{start:{line:136,column:8},end:{line:136,column:80}}],line:136},"9":{loc:{start:{line:138,column:29},end:{line:138,column:86}},type:"binary-expr",locations:[{start:{line:138,column:29},end:{line:138,column:56}},{start:{line:138,column:60},end:{line:138,column:86}}],line:138},"10":{loc:{start:{line:140,column:8},end:{line:148,column:9}},type:"if",locations:[{start:{line:140,column:8},end:{line:148,column:9}},{start:{line:140,column:8},end:{line:148,column:9}}],line:140},"11":{loc:{start:{line:142,column:31},end:{line:144,column:52}},type:"binary-expr",locations:[{start:{line:142,column:31},end:{line:142,column:62}},{start:{line:143,column:20},end:{line:143,column:46}},{start:{line:144,column:20},end:{line:144,column:52}}],line:142},"12":{loc:{start:{line:146,column:16},end:{line:146,column:49}},type:"if",locations:[{start:{line:146,column:16},end:{line:146,column:49}},{start:{line:146,column:16},end:{line:146,column:49}}],line:146},"13":{loc:{start:{line:164,column:16},end:{line:164,column:67}},type:"if",locations:[{start:{line:164,column:16},end:{line:164,column:67}},{start:{line:164,column:16},end:{line:164,column:67}}],line:164},"14":{loc:{start:{line:166,column:16},end:{line:166,column:72}},type:"if",locations:[{start:{line:166,column:16},end:{line:166,column:72}},{start:{line:166,column:16},end:{line:166,column:72}}],line:166},"15":{loc:{start:{line:186,column:8},end:{line:191,column:9}},type:"switch",locations:[{start:{line:187,column:12},end:{line:190,column:22}}],line:186},"16":{loc:{start:{line:221,column:8},end:{line:224,column:9}},type:"if",locations:[{start:{line:221,column:8},end:{line:224,column:9}},{start:{line:221,column:8},end:{line:224,column:9}}],line:221},"17":{loc:{start:{line:227,column:8},end:{line:227,column:57}},type:"if",locations:[{start:{line:227,column:8},end:{line:227,column:57}},{start:{line:227,column:8},end:{line:227,column:57}}],line:227},"18":{loc:{start:{line:295,column:8},end:{line:295,column:39}},type:"if",locations:[{start:{line:295,column:8},end:{line:295,column:39}},{start:{line:295,column:8},end:{line:295,column:39}}],line:295},"19":{loc:{start:{line:327,column:8},end:{line:329,column:9}},type:"if",locations:[{start:{line:327,column:8},end:{line:329,column:9}},{start:{line:327,column:8},end:{line:329,column:9}}],line:327}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"d610dbb5f3508d3fd6e0e77604a1127b224f0428"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const path=(cov_4r7192qsi.s[0]++,require('path'));const fs=(cov_4r7192qsi.s[1]++,require('fs'));const child=(cov_4r7192qsi.s[2]++,require('child_process'));const request=(cov_4r7192qsi.s[3]++,require('request-promise'));const requireFromString=(cov_4r7192qsi.s[4]++,require('require-from-string'));const findCacheDir=(cov_4r7192qsi.s[5]++,require('find-cache-dir'));const originalRequire=(cov_4r7192qsi.s[6]++,require('original-require'));const solcWrap=(cov_4r7192qsi.s[7]++,require('solc/wrapper'));class CompilerSupplier{/**
	 * @param {*} _config configuration options for compilation
	 */constructor(_config){cov_4r7192qsi.f[0]++;cov_4r7192qsi.s[8]++;_config=(cov_4r7192qsi.b[0][0]++,_config)||(cov_4r7192qsi.b[0][1]++,{});cov_4r7192qsi.s[9]++;this.config={version:null,versionsUrl:'https://relay.trufflesuite.com/solc/bin/list.json',compilerUrlRoot:'https://relay.trufflesuite.com/solc/bin/',dockerTagsUrl:'https://registry.hub.docker.com/v2/repositories/ethereum/solc/tags/',cache:false};cov_4r7192qsi.s[10]++;this.config=Object.assign(this.config,_config);cov_4r7192qsi.s[11]++;this.cachePath=findCacheDir({name:'etherlime',cwd:__dirname,create:true});}/**
     * Load solcjs from four possible locations:
     * - local node_modules            (config.version = <undefined>)
     * - absolute path to a local solc (config.version = <path>)
     *
     * OR specify that solc.compile should wrap:
     * - dockerized solc               (config.version = "<image-name>" && config.docker: true)
     */load(){cov_4r7192qsi.f[1]++;const self=(cov_4r7192qsi.s[12]++,this);const version=(cov_4r7192qsi.s[13]++,self.config.version);// We get local solc path
const nodeModulesSolc=(cov_4r7192qsi.s[14]++,getLocalSolcPath());cov_4r7192qsi.s[15]++;return new Promise((accept,reject)=>{cov_4r7192qsi.f[2]++;const useDocker=(cov_4r7192qsi.s[16]++,self.config.docker);const useDefaultEtherlime=(cov_4r7192qsi.s[17]++,!version);// Checking for version number
const useDefaultNodeModules=(cov_4r7192qsi.s[18]++,(cov_4r7192qsi.b[1][0]++,useDefaultEtherlime)&&(cov_4r7192qsi.b[1][1]++,self.isLocal(nodeModulesSolc)));// Checking for version number
const useLocal=(cov_4r7192qsi.s[19]++,(cov_4r7192qsi.b[2][0]++,!useDefaultEtherlime)&&(cov_4r7192qsi.b[2][1]++,self.isLocal(version)));// We're checking if the version is set as path and then we're checking the path
const useRemote=(cov_4r7192qsi.s[20]++,!useLocal);cov_4r7192qsi.s[21]++;if(useDocker){cov_4r7192qsi.b[3][0]++;cov_4r7192qsi.s[22]++;return accept(self.getBuilt("docker"));}else{cov_4r7192qsi.b[3][1]++;}cov_4r7192qsi.s[23]++;if(useLocal){cov_4r7192qsi.b[4][0]++;cov_4r7192qsi.s[24]++;return accept(self.getLocal(version));}else{cov_4r7192qsi.b[4][1]++;}cov_4r7192qsi.s[25]++;if(useDefaultNodeModules){cov_4r7192qsi.b[5][0]++;cov_4r7192qsi.s[26]++;return accept(self.getLocal(nodeModulesSolc));}else{cov_4r7192qsi.b[5][1]++;}cov_4r7192qsi.s[27]++;if(useDefaultEtherlime){cov_4r7192qsi.b[6][0]++;cov_4r7192qsi.s[28]++;return accept(self.getDefaultEtherlime());}else{cov_4r7192qsi.b[6][1]++;}cov_4r7192qsi.s[29]++;if(useRemote){cov_4r7192qsi.b[7][0]++;cov_4r7192qsi.s[30]++;return accept(self.getByUrl(version));}else{cov_4r7192qsi.b[7][1]++;}});}getReleases(){cov_4r7192qsi.f[3]++;cov_4r7192qsi.s[31]++;return this.getVersions().then(list=>{cov_4r7192qsi.f[4]++;const prereleases=(cov_4r7192qsi.s[32]++,list.builds.filter(build=>{cov_4r7192qsi.f[5]++;cov_4r7192qsi.s[33]++;return build['prerelease'];}).map(build=>{cov_4r7192qsi.f[6]++;cov_4r7192qsi.s[34]++;return build['longVersion'];}));const releases=(cov_4r7192qsi.s[35]++,Object.keys(list.releases));cov_4r7192qsi.s[36]++;return{prereleases:prereleases,releases:releases,latestRelease:list.latestRelease};});}getDockerTags(){cov_4r7192qsi.f[7]++;const self=(cov_4r7192qsi.s[37]++,this);cov_4r7192qsi.s[38]++;return request(self.config.dockerTagsUrl).then(list=>{cov_4r7192qsi.f[8]++;cov_4r7192qsi.s[39]++;return JSON.parse(list).results.map(item=>{cov_4r7192qsi.f[9]++;cov_4r7192qsi.s[40]++;return item.name;});}).catch(err=>{cov_4r7192qsi.f[10]++;cov_4r7192qsi.s[41]++;throw self.errors('noRequest',url,err);});}// Methods
getDefaultEtherlime(){cov_4r7192qsi.f[11]++;const compiler=(cov_4r7192qsi.s[42]++,require('solc'));cov_4r7192qsi.s[43]++;this.removeListener();cov_4r7192qsi.s[44]++;return compiler;}/**
	 * @param {*} localPath local path to node_modules/solc
	 */getLocal(localPath){cov_4r7192qsi.f[12]++;const self=(cov_4r7192qsi.s[45]++,this);let compiler;cov_4r7192qsi.s[46]++;try{cov_4r7192qsi.s[47]++;compiler=originalRequire(localPath);cov_4r7192qsi.s[48]++;self.removeListener();}catch(err){cov_4r7192qsi.s[49]++;throw self.errors('noPath',localPath);}cov_4r7192qsi.s[50]++;return compiler;}getVersions(){cov_4r7192qsi.f[13]++;const self=(cov_4r7192qsi.s[51]++,this);cov_4r7192qsi.s[52]++;return request(self.config.versionsUrl).then(list=>{cov_4r7192qsi.f[14]++;cov_4r7192qsi.s[53]++;return JSON.parse(list);}).catch(err=>{cov_4r7192qsi.f[15]++;cov_4r7192qsi.s[54]++;throw self.errors('noRequest',self.config.versionsUrl,err);});}/**
    * @param {*} version of solj version
    * @param {*} allVersions object containing all versions of solj
    */getVersionUrlSegment(version,allVersions){cov_4r7192qsi.f[16]++;cov_4r7192qsi.s[55]++;if(allVersions.releases[version]){cov_4r7192qsi.b[8][0]++;cov_4r7192qsi.s[56]++;return allVersions.releases[version];}else{cov_4r7192qsi.b[8][1]++;}const isPrerelease=(cov_4r7192qsi.s[57]++,(cov_4r7192qsi.b[9][0]++,version.includes('nightly'))||(cov_4r7192qsi.b[9][1]++,version.includes('commit')));cov_4r7192qsi.s[58]++;if(isPrerelease){cov_4r7192qsi.b[10][0]++;cov_4r7192qsi.s[59]++;for(let build of allVersions.builds){const exists=(cov_4r7192qsi.s[60]++,(cov_4r7192qsi.b[11][0]++,build['prerelease']===version)||(cov_4r7192qsi.b[11][1]++,build['build']===version)||(cov_4r7192qsi.b[11][2]++,build['longVersion']===version));cov_4r7192qsi.s[61]++;if(exists){cov_4r7192qsi.b[12][0]++;cov_4r7192qsi.s[62]++;return build['path'];}else{cov_4r7192qsi.b[12][1]++;}}}else{cov_4r7192qsi.b[10][1]++;}cov_4r7192qsi.s[63]++;return null;}/**
    * @param {*} version of solj version
    */getByUrl(version){cov_4r7192qsi.f[17]++;const self=(cov_4r7192qsi.s[64]++,this);cov_4r7192qsi.s[65]++;return self.getVersions(self.config.versionsUrl).then(allVersions=>{cov_4r7192qsi.f[18]++;const file=(cov_4r7192qsi.s[66]++,self.getVersionUrlSegment(version,allVersions));cov_4r7192qsi.s[67]++;if(!file){cov_4r7192qsi.b[13][0]++;cov_4r7192qsi.s[68]++;throw self.errors('noVersion',version);}else{cov_4r7192qsi.b[13][1]++;}cov_4r7192qsi.s[69]++;if(self.isCached(file)){cov_4r7192qsi.b[14][0]++;cov_4r7192qsi.s[70]++;return self.getFromCache(file);}else{cov_4r7192qsi.b[14][1]++;}const url=(cov_4r7192qsi.s[71]++,self.config.compilerUrlRoot+file);cov_4r7192qsi.s[72]++;return request.get(url).then(response=>{cov_4r7192qsi.f[19]++;cov_4r7192qsi.s[73]++;self.addToCache(response,file);cov_4r7192qsi.s[74]++;return self.compilerFromString(response);}).catch(err=>{cov_4r7192qsi.f[20]++;cov_4r7192qsi.s[75]++;throw self.errors('noRequest',url,err);});});}/**
    * @param {*} buildType of solc, e.g -> nightly-alpine-0.5.3-8825533222519c051693d1fb4bcaba6ea0cde2
    */getBuilt(buildType){cov_4r7192qsi.f[21]++;let versionString;let command;cov_4r7192qsi.s[76]++;switch(buildType){case"docker":cov_4r7192qsi.b[15][0]++;cov_4r7192qsi.s[77]++;versionString=this.validateDocker();cov_4r7192qsi.s[78]++;command='docker run -i ethereum/solc:'+this.config.version+' --standard-json';cov_4r7192qsi.s[79]++;break;}const commit=(cov_4r7192qsi.s[80]++,this.getCommitFromVersion(versionString));cov_4r7192qsi.s[81]++;return this.getByUrl(commit).then(solcjs=>{cov_4r7192qsi.f[22]++;cov_4r7192qsi.s[82]++;return{compile:options=>{cov_4r7192qsi.f[23]++;cov_4r7192qsi.s[83]++;return String(child.execSync(command,{input:options}));},version:()=>{cov_4r7192qsi.f[24]++;cov_4r7192qsi.s[84]++;return versionString;},importsParser:solcjs};});}// Utils 
/**
	 * @param {*} localPath - local path to node_modules/solc
	 */isLocal(localPath){cov_4r7192qsi.f[25]++;cov_4r7192qsi.s[85]++;return fs.existsSync(localPath);}validateDocker(){cov_4r7192qsi.f[26]++;const image=(cov_4r7192qsi.s[86]++,this.config.version);const fileName=(cov_4r7192qsi.s[87]++,image+'.version');// Skip validation if they've validated for this image before.
cov_4r7192qsi.s[88]++;if(this.isCached(fileName)){cov_4r7192qsi.b[16][0]++;const cachePath=(cov_4r7192qsi.s[89]++,this.resolveCache(fileName));cov_4r7192qsi.s[90]++;return fs.readFileSync(cachePath,'utf-8');}else{cov_4r7192qsi.b[16][1]++;}// Image specified
cov_4r7192qsi.s[91]++;if(!image){cov_4r7192qsi.b[17][0]++;cov_4r7192qsi.s[92]++;throw this.errors('noString',image);}else{cov_4r7192qsi.b[17][1]++;}// Docker exists locally
cov_4r7192qsi.s[93]++;try{cov_4r7192qsi.s[94]++;child.execSync('docker -v');}catch(err){cov_4r7192qsi.s[95]++;throw this.errors('noDocker');}// Image exists locally
cov_4r7192qsi.s[96]++;try{cov_4r7192qsi.s[97]++;child.execSync('docker inspect --type=image ethereum/solc:'+image);}catch(err){cov_4r7192qsi.s[98]++;throw this.errors('noImage',image);}// Get version & cache.
const version=(cov_4r7192qsi.s[99]++,child.execSync('docker run ethereum/solc:'+image+' --version'));const normalized=(cov_4r7192qsi.s[100]++,this.normalizeVersion(version));cov_4r7192qsi.s[101]++;this.addToCache(normalized,fileName);cov_4r7192qsi.s[102]++;return normalized;}/**
	 * @param {*} versionString - object containing version parameters: e.g: 
     *      "path": "soljson-v0.1.1+commit.6ff4cd6.js",
            "version": "0.1.1",
            "build": "commit.6ff4cd6",
            "longVersion": "0.1.1+commit.6ff4cd6",
            "keccak256": "0xd8b8c64f4e9de41e6604e6ac30274eff5b80f831f8534f0ad85ec0aff466bb25",
            "urls": [
              "bzzr://8f3c028825a1b72645f46920b67dca9432a87fc37a8940a2b2ce1dd6ddc2e29b"
	 */getCommitFromVersion(versionString){cov_4r7192qsi.f[27]++;cov_4r7192qsi.s[103]++;return'commit.'+versionString.match(/commit\.(.*?)\./)[1];}/**
	 * @param {*} version - type and version of your operating system
	 */normalizeVersion(version){cov_4r7192qsi.f[28]++;cov_4r7192qsi.s[104]++;version=String(version);cov_4r7192qsi.s[105]++;return version.split(':')[1].trim();}/**
	 * @param {*} fileName - name of soljson file, e.g: soljson-v0.4.21+commit.dfe3193c.js
	 */resolveCache(fileName){cov_4r7192qsi.f[29]++;const thunk=(cov_4r7192qsi.s[106]++,findCacheDir({name:'etherlime',cwd:__dirname,thunk:true}));cov_4r7192qsi.s[107]++;return thunk(fileName);}/**
    * @param {*} fileName - name of soljson file, e.g: soljson-v0.4.21+commit.dfe3193c.js
    */isCached(fileName){cov_4r7192qsi.f[30]++;const file=(cov_4r7192qsi.s[108]++,this.resolveCache(fileName));cov_4r7192qsi.s[109]++;return fs.existsSync(file);}/**
    * @param {*} fileName - name of soljson file, e.g: soljson-v0.4.21+commit.dfe3193c.js
    * @param {*} code - code of soljson file
    */addToCache(code,fileName){cov_4r7192qsi.f[31]++;cov_4r7192qsi.s[110]++;if(!this.config.cache){cov_4r7192qsi.b[18][0]++;cov_4r7192qsi.s[111]++;return;}else{cov_4r7192qsi.b[18][1]++;}const filePath=(cov_4r7192qsi.s[112]++,this.resolveCache(fileName));cov_4r7192qsi.s[113]++;fs.writeFileSync(filePath,code);}/**
    * @param {*} fileName - name of soljson file, e.g: soljson-v0.4.21+commit.dfe3193c.js
    */getFromCache(fileName){cov_4r7192qsi.f[32]++;const filePath=(cov_4r7192qsi.s[114]++,this.resolveCache(fileName));const soljson=(cov_4r7192qsi.s[115]++,originalRequire(filePath));const wrapped=(cov_4r7192qsi.s[116]++,solcWrap(soljson));cov_4r7192qsi.s[117]++;this.removeListener();cov_4r7192qsi.s[118]++;return wrapped;}/**
    * @param {*} code - code of soljson file
    */compilerFromString(code){cov_4r7192qsi.f[33]++;const soljson=(cov_4r7192qsi.s[119]++,requireFromString(code));const wrapped=(cov_4r7192qsi.s[120]++,solcWrap(soljson));cov_4r7192qsi.s[121]++;this.removeListener();cov_4r7192qsi.s[122]++;return wrapped;}removeListener(){cov_4r7192qsi.f[34]++;const listeners=(cov_4r7192qsi.s[123]++,process.listeners("uncaughtException"));const exceptionHandler=(cov_4r7192qsi.s[124]++,listeners[listeners.length-1]);cov_4r7192qsi.s[125]++;if(exceptionHandler){cov_4r7192qsi.b[19][0]++;cov_4r7192qsi.s[126]++;process.removeListener("uncaughtException",exceptionHandler);}else{cov_4r7192qsi.b[19][1]++;}}errors(kind,input,err){cov_4r7192qsi.f[35]++;const info=(cov_4r7192qsi.s[127]++,'Run `etherlime compile --list` to see available versions.');const kinds=(cov_4r7192qsi.s[128]++,{noPath:"Could not find compiler at: "+input,noVersion:"Could not find compiler version:\n"+input+".\n"+info,noRequest:"Failed to complete request to: "+input+".\n\n"+err,noDocker:"You are trying to run dockerized solc, but docker is not installed.",noImage:"Please pull "+input+" from docker before trying to compile with it.",noNative:"Could not execute local solc binary: "+err,// Lists
noString:"`compilers.solc.version` option must be a string specifying:\n"+"   - a path to a locally installed solcjs\n"+"   - a solc version (ex: '0.4.22')\n"+"   - a docker image name (ex: 'stable')\n"+"Received: "+input+" instead."});cov_4r7192qsi.s[129]++;return new Error(kinds[kind]);}}cov_4r7192qsi.s[130]++;getLocalSolcPath=()=>{cov_4r7192qsi.f[36]++;cov_4r7192qsi.s[131]++;return`${process.cwd()}/node_modules/solc`;};cov_4r7192qsi.s[132]++;module.exports=CompilerSupplier;