var cov_7g2erpg0e=function(){var path="/Users/desimiramitkova/Projects/etherlime/packages/etherlime/cli-commands/history/history.js";var hash="9f46183764f18bc37f445baafc8401fc92128062";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/desimiramitkova/Projects/etherlime/packages/etherlime/cli-commands/history/history.js",statementMap:{"0":{start:{line:1,column:18},end:{line:1,column:58}},"1":{start:{line:2,column:14},end:{line:2,column:34}},"2":{start:{line:3,column:15},end:{line:3,column:70}},"3":{start:{line:4,column:28},end:{line:4,column:90}},"4":{start:{line:6,column:12},end:{line:18,column:1}},"5":{start:{line:7,column:17},end:{line:7,column:39}},"6":{start:{line:8,column:15},end:{line:8,column:68}},"7":{start:{line:9,column:1},end:{line:17,column:2}},"8":{start:{line:9,column:14},end:{line:9,column:19}},"9":{start:{line:10,column:2},end:{line:10,column:35}},"10":{start:{line:11,column:24},end:{line:11,column:34}},"11":{start:{line:13,column:2},end:{line:16,column:3}},"12":{start:{line:14,column:3},end:{line:14,column:49}},"13":{start:{line:15,column:3},end:{line:15,column:16}},"14":{start:{line:21,column:0},end:{line:23,column:2}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:12},end:{line:6,column:13}},loc:{start:{line:6,column:37},end:{line:18,column:1}},line:6}},branchMap:{"0":{loc:{start:{line:8,column:15},end:{line:8,column:68}},type:"cond-expr",locations:[{start:{line:8,column:42},end:{line:8,column:64}},{start:{line:8,column:67},end:{line:8,column:68}}],line:8},"1":{loc:{start:{line:13,column:2},end:{line:16,column:3}},type:"if",locations:[{start:{line:13,column:2},end:{line:16,column:3}},{start:{line:13,column:2},end:{line:16,column:3}}],line:13}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},f:{"0":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"9f46183764f18bc37f445baafc8401fc92128062"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const logsStore=(cov_7g2erpg0e.s[0]++,require('./../../logs-store/logs-store'));const utils=(cov_7g2erpg0e.s[1]++,require('./../util'));const logger=(cov_7g2erpg0e.s[2]++,require('./../../logger-service/logger-service').logger);const loggerAppenderTypes=(cov_7g2erpg0e.s[3]++,require('./../../logger-service/logger-service').AppenderTypes);cov_7g2erpg0e.s[4]++;const run=async(limit,output)=>{cov_7g2erpg0e.f[0]++;const history=(cov_7g2erpg0e.s[5]++,logsStore.getHistory());const start=(cov_7g2erpg0e.s[6]++,history.length>limit?(cov_7g2erpg0e.b[0][0]++,history.length-limit):(cov_7g2erpg0e.b[0][1]++,0));cov_7g2erpg0e.s[7]++;for(let i=(cov_7g2erpg0e.s[8]++,start);i<history.length;i++){cov_7g2erpg0e.s[9]++;logger.log(`Execution ID: ${i}:`);const currentRecord=(cov_7g2erpg0e.s[10]++,history[i]);cov_7g2erpg0e.s[11]++;if(output===loggerAppenderTypes.NORMAL){cov_7g2erpg0e.b[1][0]++;cov_7g2erpg0e.s[12]++;utils.printReportTable(currentRecord.actions);cov_7g2erpg0e.s[13]++;logger.log();}else{cov_7g2erpg0e.b[1][1]++;}}};cov_7g2erpg0e.s[14]++;module.exports={run};