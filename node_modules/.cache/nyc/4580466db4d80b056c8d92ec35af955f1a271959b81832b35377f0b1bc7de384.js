var cov_x4ruehiay=function(){var path="/Users/desimiramitkova/Projects/etherlime/cli-commands/ganache/ganache.js";var hash="c87941e55a9605068af4fc4be71f6e4a4d89fdf6";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/desimiramitkova/Projects/etherlime/cli-commands/ganache/ganache.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:38}},"1":{start:{line:2,column:14},end:{line:2,column:37}},"2":{start:{line:3,column:29},end:{line:3,column:74}},"3":{start:{line:4,column:15},end:{line:4,column:46}},"4":{start:{line:5,column:15},end:{line:5,column:68}},"5":{start:{line:6,column:15},end:{line:6,column:32}},"6":{start:{line:7,column:11},end:{line:7,column:24}},"7":{start:{line:8,column:13},end:{line:8,column:28}},"8":{start:{line:11,column:12},end:{line:28,column:1}},"9":{start:{line:12,column:1},end:{line:14,column:2}},"10":{start:{line:13,column:2},end:{line:13,column:39}},"11":{start:{line:15,column:1},end:{line:15,column:46}},"12":{start:{line:16,column:1},end:{line:16,column:53}},"13":{start:{line:17,column:1},end:{line:17,column:73}},"14":{start:{line:18,column:1},end:{line:18,column:73}},"15":{start:{line:19,column:16},end:{line:25,column:3}},"16":{start:{line:27,column:1},end:{line:27,column:50}},"17":{start:{line:29,column:36},end:{line:43,column:1}},"18":{start:{line:30,column:1},end:{line:33,column:2}},"19":{start:{line:31,column:2},end:{line:31,column:18}},"20":{start:{line:32,column:2},end:{line:32,column:9}},"21":{start:{line:34,column:24},end:{line:34,column:58}},"22":{start:{line:35,column:23},end:{line:35,column:46}},"23":{start:{line:36,column:27},end:{line:36,column:77}},"24":{start:{line:37,column:1},end:{line:39,column:2}},"25":{start:{line:37,column:14},end:{line:37,column:15}},"26":{start:{line:38,column:2},end:{line:38,column:152}},"27":{start:{line:40,column:1},end:{line:40,column:55}},"28":{start:{line:41,column:1},end:{line:41,column:118}},"29":{start:{line:42,column:1},end:{line:42,column:121}},"30":{start:{line:45,column:25},end:{line:56,column:1}},"31":{start:{line:48,column:25},end:{line:48,column:45}},"32":{start:{line:49,column:1},end:{line:53,column:2}},"33":{start:{line:49,column:14},end:{line:49,column:15}},"34":{start:{line:50,column:13},end:{line:50,column:34}},"35":{start:{line:51,column:15},end:{line:51,column:57}},"36":{start:{line:52,column:2},end:{line:52,column:115}},"37":{start:{line:54,column:1},end:{line:54,column:34}},"38":{start:{line:55,column:1},end:{line:55,column:97}},"39":{start:{line:58,column:0},end:{line:61,column:2}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:12},end:{line:11,column:13}},loc:{start:{line:11,column:86},end:{line:28,column:1}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:29,column:36},end:{line:29,column:37}},loc:{start:{line:29,column:57},end:{line:43,column:1}},line:29},"2":{name:"(anonymous_2)",decl:{start:{line:45,column:25},end:{line:45,column:26}},loc:{start:{line:45,column:49},end:{line:56,column:1}},line:45}},branchMap:{"0":{loc:{start:{line:12,column:1},end:{line:14,column:2}},type:"if",locations:[{start:{line:12,column:1},end:{line:14,column:2}},{start:{line:12,column:1},end:{line:14,column:2}}],line:12},"1":{loc:{start:{line:12,column:5},end:{line:12,column:25}},type:"binary-expr",locations:[{start:{line:12,column:5},end:{line:12,column:13}},{start:{line:12,column:17},end:{line:12,column:25}}],line:12},"2":{loc:{start:{line:15,column:8},end:{line:15,column:45}},type:"cond-expr",locations:[{start:{line:15,column:19},end:{line:15,column:25}},{start:{line:15,column:28},end:{line:15,column:45}}],line:15},"3":{loc:{start:{line:16,column:8},end:{line:16,column:52}},type:"cond-expr",locations:[{start:{line:16,column:23},end:{line:16,column:33}},{start:{line:16,column:36},end:{line:16,column:52}}],line:16},"4":{loc:{start:{line:17,column:12},end:{line:17,column:72}},type:"cond-expr",locations:[{start:{line:17,column:25},end:{line:17,column:55}},{start:{line:17,column:58},end:{line:17,column:72}}],line:17},"5":{loc:{start:{line:18,column:12},end:{line:18,column:72}},type:"cond-expr",locations:[{start:{line:18,column:25},end:{line:18,column:55}},{start:{line:18,column:58},end:{line:18,column:72}}],line:18},"6":{loc:{start:{line:30,column:1},end:{line:33,column:2}},type:"if",locations:[{start:{line:30,column:1},end:{line:33,column:2}},{start:{line:30,column:1},end:{line:33,column:2}}],line:30},"7":{loc:{start:{line:41,column:1},end:{line:41,column:117}},type:"cond-expr",locations:[{start:{line:41,column:17},end:{line:41,column:110}},{start:{line:41,column:113},end:{line:41,column:117}}],line:41},"8":{loc:{start:{line:42,column:1},end:{line:42,column:120}},type:"cond-expr",locations:[{start:{line:42,column:21},end:{line:42,column:113}},{start:{line:42,column:116},end:{line:42,column:120}}],line:42}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"c87941e55a9605068af4fc4be71f6e4a4d89fdf6"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const ganache=(cov_x4ruehiay.s[0]++,require('ganache-cli'));const setup=(cov_x4ruehiay.s[1]++,require('./setup.json'));const defaultSetupAccounts=(cov_x4ruehiay.s[2]++,require('../../deployer/setup.json').accounts);const colors=(cov_x4ruehiay.s[3]++,require('./../../utils/colors'));const logger=(cov_x4ruehiay.s[4]++,require('../../logger-service/logger-service').logger);const ethers=(cov_x4ruehiay.s[5]++,require('ethers'));const fs=(cov_x4ruehiay.s[6]++,require('fs'));const path=(cov_x4ruehiay.s[7]++,require('path'));let port;cov_x4ruehiay.s[8]++;const run=(inPort,inLogger,forkParams,gasPrice,gasLimit,mnemonic,generate)=>{cov_x4ruehiay.f[0]++;cov_x4ruehiay.s[9]++;if((cov_x4ruehiay.b[1][0]++,mnemonic)&&(cov_x4ruehiay.b[1][1]++,generate)){cov_x4ruehiay.b[0][0]++;cov_x4ruehiay.s[10]++;generateAccounts(mnemonic,generate);}else{cov_x4ruehiay.b[0][1]++;}cov_x4ruehiay.s[11]++;port=inPort?(cov_x4ruehiay.b[2][0]++,inPort):(cov_x4ruehiay.b[2][1]++,setup.defaultPort);cov_x4ruehiay.s[12]++;fork=forkParams?(cov_x4ruehiay.b[3][0]++,forkParams):(cov_x4ruehiay.b[3][1]++,setup.forkParams);cov_x4ruehiay.s[13]++;gasPrice=gasPrice?(cov_x4ruehiay.b[4][0]++,ethers.utils.hexlify(gasPrice)):(cov_x4ruehiay.b[4][1]++,setup.gasPrice);cov_x4ruehiay.s[14]++;gasLimit=gasLimit?(cov_x4ruehiay.b[5][0]++,ethers.utils.hexlify(gasLimit)):(cov_x4ruehiay.b[5][1]++,setup.gasLimit);const server=(cov_x4ruehiay.s[15]++,ganache.server({accounts:setup.accounts,logger:inLogger,fork,gasPrice,gasLimit}));cov_x4ruehiay.s[16]++;server.listen(port,ganacheServerListenCallback);};cov_x4ruehiay.s[17]++;const ganacheServerListenCallback=(err,blockchain)=>{cov_x4ruehiay.f[1]++;cov_x4ruehiay.s[18]++;if(err){cov_x4ruehiay.b[6][0]++;cov_x4ruehiay.s[19]++;logger.log(err);cov_x4ruehiay.s[20]++;return;}else{cov_x4ruehiay.b[6][1]++;}const accountsLength=(cov_x4ruehiay.s[21]++,blockchain.options.accounts.length);const forkedNetwork=(cov_x4ruehiay.s[22]++,blockchain.options.fork);const forkedBlockNumber=(cov_x4ruehiay.s[23]++,parseInt(blockchain.options.fork_block_number,16));cov_x4ruehiay.s[24]++;for(let i=(cov_x4ruehiay.s[25]++,0);i<accountsLength;i++){cov_x4ruehiay.s[26]++;logger.log(`[${i}] Address: ${Object.getOwnPropertyNames(blockchain.personal_accounts)[i]} Private key: ${blockchain.options.accounts[i].secretKey}`);}cov_x4ruehiay.s[27]++;logger.log(`\nListening on http://localhost:${port}`);cov_x4ruehiay.s[28]++;forkedNetwork?(cov_x4ruehiay.b[7][0]++,logger.log(`Etherlime ganache is forked from network: ${colors.colorSuccess(forkedNetwork)}`)):(cov_x4ruehiay.b[7][1]++,null);cov_x4ruehiay.s[29]++;forkedBlockNumber?(cov_x4ruehiay.b[8][0]++,logger.log(`Network is forked from block number: ${colors.colorSuccess(forkedBlockNumber)}`)):(cov_x4ruehiay.b[8][1]++,null);};cov_x4ruehiay.s[30]++;const generateAccounts=(mnemonic,generate)=>{cov_x4ruehiay.f[2]++;// Every time the command is run with mnemonic, reset the account list with the default one and add the number of accounts, the user specifies.
const currentAccounts=(cov_x4ruehiay.s[31]++,defaultSetupAccounts);cov_x4ruehiay.s[32]++;for(let i=(cov_x4ruehiay.s[33]++,0);i<generate;i++){let path=(cov_x4ruehiay.s[34]++,`m/44'/60'/${i}'/0/0`);let wallet=(cov_x4ruehiay.s[35]++,ethers.Wallet.fromMnemonic(mnemonic,path));cov_x4ruehiay.s[36]++;currentAccounts.push({secretKey:wallet.signingKey.privateKey,balance:"0x90000000000000000000000000000000"});}cov_x4ruehiay.s[37]++;setup.accounts=currentAccounts;cov_x4ruehiay.s[38]++;fs.writeFileSync(path.resolve(__dirname,'setup.json'),JSON.stringify(setup,null,1),"utf8");};cov_x4ruehiay.s[39]++;module.exports={run,ganacheServerListenCallback};