var cov_2r5sq7jvz2=function(){var path="/Users/desimiramitkova/Projects/etherlime/packages/etherlime/cli-commands/commands.js";var hash="94f88fafb67b4f7f4452a26c12aa71174d448e93";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/desimiramitkova/Projects/etherlime/packages/etherlime/cli-commands/commands.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:44}},"1":{start:{line:2,column:13},end:{line:2,column:35}},"2":{start:{line:3,column:17},end:{line:3,column:47}},"3":{start:{line:4,column:16},end:{line:4,column:44}},"4":{start:{line:5,column:17},end:{line:5,column:47}},"5":{start:{line:6,column:13},end:{line:6,column:45}},"6":{start:{line:7,column:14},end:{line:7,column:38}},"7":{start:{line:8,column:15},end:{line:8,column:67}},"8":{start:{line:9,column:21},end:{line:9,column:47}},"9":{start:{line:10,column:20},end:{line:10,column:44}},"10":{start:{line:11,column:14},end:{line:11,column:41}},"11":{start:{line:12,column:16},end:{line:12,column:46}},"12":{start:{line:13,column:23},end:{line:13,column:60}},"13":{start:{line:14,column:21},end:{line:14,column:56}},"14":{start:{line:15,column:22},end:{line:15,column:58}},"15":{start:{line:16,column:17},end:{line:16,column:51}},"16":{start:{line:17,column:23},end:{line:17,column:60}},"17":{start:{line:18,column:21},end:{line:18,column:56}},"18":{start:{line:19,column:12},end:{line:19,column:52}},"19":{start:{line:21,column:17},end:{line:547,column:1}},"20":{start:{line:26,column:3},end:{line:29,column:6}},"21":{start:{line:31,column:3},end:{line:36,column:6}},"22":{start:{line:38,column:3},end:{line:41,column:6}},"23":{start:{line:43,column:3},end:{line:46,column:6}},"24":{start:{line:48,column:3},end:{line:51,column:6}},"25":{start:{line:53,column:3},end:{line:56,column:6}},"26":{start:{line:58,column:3},end:{line:62,column:6}},"27":{start:{line:66,column:3},end:{line:68,column:6}},"28":{start:{line:70,column:3},end:{line:70,column:44}},"29":{start:{line:72,column:3},end:{line:78,column:4}},"30":{start:{line:73,column:4},end:{line:73,column:103}},"31":{start:{line:75,column:4},end:{line:75,column:23}},"32":{start:{line:77,column:4},end:{line:77,column:33}},"33":{start:{line:85,column:3},end:{line:90,column:6}},"34":{start:{line:94,column:3},end:{line:98,column:6}},"35":{start:{line:101,column:3},end:{line:103,column:6}},"36":{start:{line:104,column:3},end:{line:104,column:44}},"37":{start:{line:106,column:3},end:{line:112,column:4}},"38":{start:{line:107,column:4},end:{line:107,column:28}},"39":{start:{line:109,column:4},end:{line:109,column:23}},"40":{start:{line:111,column:4},end:{line:111,column:33}},"41":{start:{line:119,column:3},end:{line:122,column:6}},"42":{start:{line:124,column:3},end:{line:127,column:6}},"43":{start:{line:129,column:3},end:{line:132,column:6}},"44":{start:{line:134,column:3},end:{line:138,column:6}},"45":{start:{line:140,column:3},end:{line:143,column:6}},"46":{start:{line:145,column:3},end:{line:150,column:6}},"47":{start:{line:153,column:3},end:{line:153,column:44}},"48":{start:{line:155,column:3},end:{line:169,column:4}},"49":{start:{line:156,column:4},end:{line:156,column:112}},"50":{start:{line:158,column:4},end:{line:158,column:23}},"51":{start:{line:160,column:4},end:{line:160,column:33}},"52":{start:{line:161,column:23},end:{line:163,column:5}},"53":{start:{line:164,column:4},end:{line:164,column:34}},"54":{start:{line:166,column:4},end:{line:168,column:7}},"55":{start:{line:176,column:3},end:{line:180,column:6}},"56":{start:{line:182,column:3},end:{line:187,column:6}},"57":{start:{line:190,column:3},end:{line:192,column:6}},"58":{start:{line:193,column:3},end:{line:193,column:44}},"59":{start:{line:195,column:3},end:{line:201,column:4}},"60":{start:{line:196,column:4},end:{line:196,column:47}},"61":{start:{line:198,column:4},end:{line:198,column:23}},"62":{start:{line:200,column:4},end:{line:200,column:33}},"63":{start:{line:208,column:3},end:{line:212,column:6}},"64":{start:{line:214,column:3},end:{line:217,column:6}},"65":{start:{line:219,column:3},end:{line:222,column:6}},"66":{start:{line:224,column:3},end:{line:228,column:6}},"67":{start:{line:230,column:3},end:{line:233,column:6}},"68":{start:{line:235,column:3},end:{line:239,column:6}},"69":{start:{line:241,column:3},end:{line:245,column:6}},"70":{start:{line:247,column:3},end:{line:252,column:6}},"71":{start:{line:254,column:3},end:{line:257,column:6}},"72":{start:{line:259,column:3},end:{line:262,column:6}},"73":{start:{line:265,column:3},end:{line:267,column:6}},"74":{start:{line:268,column:3},end:{line:268,column:44}},"75":{start:{line:270,column:3},end:{line:276,column:4}},"76":{start:{line:271,column:4},end:{line:271,column:152}},"77":{start:{line:273,column:4},end:{line:273,column:23}},"78":{start:{line:275,column:4},end:{line:275,column:33}},"79":{start:{line:283,column:3},end:{line:287,column:6}},"80":{start:{line:289,column:3},end:{line:293,column:6}},"81":{start:{line:295,column:3},end:{line:299,column:6}},"82":{start:{line:301,column:3},end:{line:304,column:6}},"83":{start:{line:306,column:3},end:{line:309,column:6}},"84":{start:{line:311,column:3},end:{line:316,column:6}},"85":{start:{line:318,column:3},end:{line:322,column:6}},"86":{start:{line:324,column:3},end:{line:328,column:6}},"87":{start:{line:331,column:3},end:{line:333,column:6}},"88":{start:{line:334,column:3},end:{line:334,column:44}},"89":{start:{line:336,column:3},end:{line:342,column:4}},"90":{start:{line:337,column:4},end:{line:337,column:111}},"91":{start:{line:339,column:4},end:{line:339,column:23}},"92":{start:{line:341,column:4},end:{line:341,column:33}},"93":{start:{line:349,column:3},end:{line:353,column:6}},"94":{start:{line:355,column:3},end:{line:359,column:6}},"95":{start:{line:361,column:3},end:{line:364,column:6}},"96":{start:{line:366,column:3},end:{line:369,column:6}},"97":{start:{line:371,column:3},end:{line:375,column:6}},"98":{start:{line:377,column:3},end:{line:381,column:6}},"99":{start:{line:383,column:3},end:{line:387,column:6}},"100":{start:{line:389,column:3},end:{line:393,column:6}},"101":{start:{line:397,column:3},end:{line:399,column:6}},"102":{start:{line:400,column:3},end:{line:407,column:4}},"103":{start:{line:401,column:4},end:{line:401,column:147}},"104":{start:{line:403,column:4},end:{line:403,column:21}},"105":{start:{line:404,column:4},end:{line:404,column:27}},"106":{start:{line:406,column:4},end:{line:406,column:33}},"107":{start:{line:415,column:3},end:{line:418,column:5}},"108":{start:{line:420,column:3},end:{line:424,column:5}},"109":{start:{line:427,column:3},end:{line:429,column:6}},"110":{start:{line:430,column:3},end:{line:436,column:4}},"111":{start:{line:431,column:4},end:{line:431,column:52}},"112":{start:{line:433,column:4},end:{line:433,column:23}},"113":{start:{line:435,column:4},end:{line:435,column:33}},"114":{start:{line:444,column:3},end:{line:447,column:5}},"115":{start:{line:450,column:3},end:{line:452,column:6}},"116":{start:{line:454,column:3},end:{line:454,column:44}},"117":{start:{line:456,column:3},end:{line:462,column:4}},"118":{start:{line:457,column:4},end:{line:457,column:25}},"119":{start:{line:459,column:4},end:{line:459,column:23}},"120":{start:{line:461,column:4},end:{line:461,column:33}},"121":{start:{line:471,column:3},end:{line:473,column:6}},"122":{start:{line:475,column:3},end:{line:481,column:4}},"123":{start:{line:476,column:4},end:{line:476,column:30}},"124":{start:{line:478,column:4},end:{line:478,column:23}},"125":{start:{line:480,column:4},end:{line:480,column:33}},"126":{start:{line:488,column:3},end:{line:491,column:6}},"127":{start:{line:493,column:3},end:{line:496,column:6}},"128":{start:{line:499,column:3},end:{line:505,column:4}},"129":{start:{line:500,column:4},end:{line:500,column:51}},"130":{start:{line:502,column:4},end:{line:502,column:23}},"131":{start:{line:504,column:4},end:{line:504,column:33}},"132":{start:{line:512,column:3},end:{line:515,column:6}},"133":{start:{line:518,column:3},end:{line:524,column:4}},"134":{start:{line:519,column:4},end:{line:519,column:29}},"135":{start:{line:521,column:4},end:{line:521,column:23}},"136":{start:{line:523,column:4},end:{line:523,column:33}},"137":{start:{line:531,column:3},end:{line:535,column:6}},"138":{start:{line:538,column:3},end:{line:544,column:4}},"139":{start:{line:539,column:4},end:{line:539,column:35}},"140":{start:{line:541,column:4},end:{line:541,column:23}},"141":{start:{line:543,column:4},end:{line:543,column:33}},"142":{start:{line:549,column:27},end:{line:609,column:1}},"143":{start:{line:552,column:14},end:{line:552,column:26}},"144":{start:{line:553,column:15},end:{line:553,column:29}},"145":{start:{line:554,column:18},end:{line:554,column:44}},"146":{start:{line:555,column:21},end:{line:555,column:50}},"147":{start:{line:556,column:13},end:{line:556,column:33}},"148":{start:{line:557,column:19},end:{line:557,column:50}},"149":{start:{line:561,column:1},end:{line:608,column:2}},"150":{start:{line:563,column:2},end:{line:563,column:29}},"151":{start:{line:564,column:3},end:{line:564,column:9}},"152":{start:{line:566,column:3},end:{line:566,column:28}},"153":{start:{line:567,column:3},end:{line:567,column:9}},"154":{start:{line:569,column:3},end:{line:571,column:4}},"155":{start:{line:570,column:4},end:{line:570,column:25}},"156":{start:{line:572,column:3},end:{line:574,column:4}},"157":{start:{line:573,column:4},end:{line:573,column:27}},"158":{start:{line:575,column:3},end:{line:577,column:4}},"159":{start:{line:576,column:4},end:{line:576,column:33}},"160":{start:{line:578,column:3},end:{line:578,column:56}},"161":{start:{line:579,column:3},end:{line:579,column:9}},"162":{start:{line:581,column:3},end:{line:583,column:4}},"163":{start:{line:582,column:4},end:{line:582,column:39}},"164":{start:{line:584,column:3},end:{line:586,column:4}},"165":{start:{line:585,column:4},end:{line:585,column:23}},"166":{start:{line:587,column:3},end:{line:589,column:4}},"167":{start:{line:588,column:4},end:{line:588,column:35}},"168":{start:{line:591,column:3},end:{line:591,column:57}},"169":{start:{line:592,column:3},end:{line:592,column:9}},"170":{start:{line:594,column:3},end:{line:596,column:4}},"171":{start:{line:595,column:4},end:{line:595,column:35}},"172":{start:{line:597,column:3},end:{line:597,column:41}},"173":{start:{line:598,column:3},end:{line:598,column:9}},"174":{start:{line:600,column:3},end:{line:602,column:4}},"175":{start:{line:601,column:4},end:{line:601,column:39}},"176":{start:{line:603,column:3},end:{line:605,column:4}},"177":{start:{line:604,column:4},end:{line:604,column:23}},"178":{start:{line:606,column:3},end:{line:606,column:48}},"179":{start:{line:607,column:3},end:{line:607,column:9}},"180":{start:{line:611,column:0},end:{line:611,column:26}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:25,column:22},end:{line:25,column:23}},loc:{start:{line:25,column:33},end:{line:64,column:3}},line:25},"1":{name:"(anonymous_1)",decl:{start:{line:65,column:20},end:{line:65,column:21}},loc:{start:{line:65,column:30},end:{line:79,column:3}},line:65},"2":{name:"(anonymous_2)",decl:{start:{line:84,column:22},end:{line:84,column:23}},loc:{start:{line:84,column:33},end:{line:91,column:3}},line:84},"3":{name:"(anonymous_3)",decl:{start:{line:93,column:22},end:{line:93,column:23}},loc:{start:{line:93,column:33},end:{line:99,column:3}},line:93},"4":{name:"(anonymous_4)",decl:{start:{line:100,column:20},end:{line:100,column:21}},loc:{start:{line:100,column:36},end:{line:113,column:3}},line:100},"5":{name:"(anonymous_5)",decl:{start:{line:118,column:22},end:{line:118,column:23}},loc:{start:{line:118,column:33},end:{line:151,column:3}},line:118},"6":{name:"(anonymous_6)",decl:{start:{line:152,column:20},end:{line:152,column:21}},loc:{start:{line:152,column:36},end:{line:170,column:3}},line:152},"7":{name:"(anonymous_7)",decl:{start:{line:175,column:22},end:{line:175,column:23}},loc:{start:{line:175,column:33},end:{line:188,column:3}},line:175},"8":{name:"(anonymous_8)",decl:{start:{line:189,column:20},end:{line:189,column:21}},loc:{start:{line:189,column:36},end:{line:202,column:3}},line:189},"9":{name:"(anonymous_9)",decl:{start:{line:207,column:22},end:{line:207,column:23}},loc:{start:{line:207,column:33},end:{line:263,column:3}},line:207},"10":{name:"(anonymous_10)",decl:{start:{line:264,column:20},end:{line:264,column:21}},loc:{start:{line:264,column:36},end:{line:277,column:3}},line:264},"11":{name:"(anonymous_11)",decl:{start:{line:282,column:22},end:{line:282,column:23}},loc:{start:{line:282,column:33},end:{line:329,column:3}},line:282},"12":{name:"(anonymous_12)",decl:{start:{line:330,column:20},end:{line:330,column:21}},loc:{start:{line:330,column:36},end:{line:343,column:3}},line:330},"13":{name:"(anonymous_13)",decl:{start:{line:348,column:22},end:{line:348,column:23}},loc:{start:{line:348,column:33},end:{line:395,column:3}},line:348},"14":{name:"(anonymous_14)",decl:{start:{line:396,column:20},end:{line:396,column:21}},loc:{start:{line:396,column:36},end:{line:409,column:3}},line:396},"15":{name:"(anonymous_15)",decl:{start:{line:414,column:22},end:{line:414,column:23}},loc:{start:{line:414,column:33},end:{line:425,column:3}},line:414},"16":{name:"(anonymous_16)",decl:{start:{line:426,column:20},end:{line:426,column:21}},loc:{start:{line:426,column:36},end:{line:438,column:3}},line:426},"17":{name:"(anonymous_17)",decl:{start:{line:443,column:22},end:{line:443,column:23}},loc:{start:{line:443,column:33},end:{line:448,column:3}},line:443},"18":{name:"(anonymous_18)",decl:{start:{line:449,column:20},end:{line:449,column:21}},loc:{start:{line:449,column:30},end:{line:463,column:3}},line:449},"19":{name:"(anonymous_19)",decl:{start:{line:468,column:22},end:{line:468,column:23}},loc:{start:{line:468,column:33},end:{line:469,column:3}},line:468},"20":{name:"(anonymous_20)",decl:{start:{line:470,column:20},end:{line:470,column:21}},loc:{start:{line:470,column:30},end:{line:482,column:3}},line:470},"21":{name:"(anonymous_21)",decl:{start:{line:487,column:22},end:{line:487,column:23}},loc:{start:{line:487,column:33},end:{line:497,column:3}},line:487},"22":{name:"(anonymous_22)",decl:{start:{line:498,column:20},end:{line:498,column:21}},loc:{start:{line:498,column:36},end:{line:506,column:3}},line:498},"23":{name:"(anonymous_23)",decl:{start:{line:511,column:22},end:{line:511,column:23}},loc:{start:{line:511,column:33},end:{line:516,column:3}},line:511},"24":{name:"(anonymous_24)",decl:{start:{line:517,column:20},end:{line:517,column:21}},loc:{start:{line:517,column:36},end:{line:525,column:3}},line:517},"25":{name:"(anonymous_25)",decl:{start:{line:530,column:22},end:{line:530,column:23}},loc:{start:{line:530,column:33},end:{line:536,column:3}},line:530},"26":{name:"(anonymous_26)",decl:{start:{line:537,column:20},end:{line:537,column:21}},loc:{start:{line:537,column:36},end:{line:545,column:3}},line:537},"27":{name:"(anonymous_27)",decl:{start:{line:549,column:27},end:{line:549,column:28}},loc:{start:{line:549,column:43},end:{line:609,column:1}},line:549}},branchMap:{"0":{loc:{start:{line:561,column:1},end:{line:608,column:2}},type:"switch",locations:[{start:{line:562,column:2},end:{line:564,column:9}},{start:{line:565,column:2},end:{line:567,column:9}},{start:{line:568,column:2},end:{line:579,column:9}},{start:{line:580,column:2},end:{line:592,column:9}},{start:{line:593,column:2},end:{line:598,column:9}},{start:{line:599,column:2},end:{line:607,column:9}}],line:561},"1":{loc:{start:{line:569,column:3},end:{line:571,column:4}},type:"if",locations:[{start:{line:569,column:3},end:{line:571,column:4}},{start:{line:569,column:3},end:{line:571,column:4}}],line:569},"2":{loc:{start:{line:572,column:3},end:{line:574,column:4}},type:"if",locations:[{start:{line:572,column:3},end:{line:574,column:4}},{start:{line:572,column:3},end:{line:574,column:4}}],line:572},"3":{loc:{start:{line:575,column:3},end:{line:577,column:4}},type:"if",locations:[{start:{line:575,column:3},end:{line:577,column:4}},{start:{line:575,column:3},end:{line:577,column:4}}],line:575},"4":{loc:{start:{line:581,column:3},end:{line:583,column:4}},type:"if",locations:[{start:{line:581,column:3},end:{line:583,column:4}},{start:{line:581,column:3},end:{line:583,column:4}}],line:581},"5":{loc:{start:{line:584,column:3},end:{line:586,column:4}},type:"if",locations:[{start:{line:584,column:3},end:{line:586,column:4}},{start:{line:584,column:3},end:{line:586,column:4}}],line:584},"6":{loc:{start:{line:587,column:3},end:{line:589,column:4}},type:"if",locations:[{start:{line:587,column:3},end:{line:589,column:4}},{start:{line:587,column:3},end:{line:589,column:4}}],line:587},"7":{loc:{start:{line:594,column:3},end:{line:596,column:4}},type:"if",locations:[{start:{line:594,column:3},end:{line:596,column:4}},{start:{line:594,column:3},end:{line:596,column:4}}],line:594},"8":{loc:{start:{line:600,column:3},end:{line:602,column:4}},type:"if",locations:[{start:{line:600,column:3},end:{line:602,column:4}},{start:{line:600,column:3},end:{line:602,column:4}}],line:600},"9":{loc:{start:{line:603,column:3},end:{line:605,column:4}},type:"if",locations:[{start:{line:603,column:3},end:{line:605,column:4}},{start:{line:603,column:3},end:{line:605,column:4}}],line:603}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},b:{"0":[0,0,0,0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"94f88fafb67b4f7f4452a26c12aa71174d448e93"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const ganache=(cov_2r5sq7jvz2.s[0]++,require('./ganache/ganache'));const init=(cov_2r5sq7jvz2.s[1]++,require('./init/init'));const deployer=(cov_2r5sq7jvz2.s[2]++,require('./deployer/deployer'));const history=(cov_2r5sq7jvz2.s[3]++,require('./history/history'));const compiler=(cov_2r5sq7jvz2.s[4]++,require('./compiler/compiler'));const test=(cov_2r5sq7jvz2.s[5]++,require('./etherlime-test/test'));const shape=(cov_2r5sq7jvz2.s[6]++,require('./shape/shape'));const logger=(cov_2r5sq7jvz2.s[7]++,require('./../logger-service/logger-service').logger);const eventTracker=(cov_2r5sq7jvz2.s[8]++,require('./event-tracker'));const recordEvent=(cov_2r5sq7jvz2.s[9]++,eventTracker.recordEvent);const debug=(cov_2r5sq7jvz2.s[10]++,require('./debugger/index'));const flatten=(cov_2r5sq7jvz2.s[11]++,require('./flattener/flatten'));const circuitCompile=(cov_2r5sq7jvz2.s[12]++,require('./zk-proof/circuit-compile'));const trustedSetup=(cov_2r5sq7jvz2.s[13]++,require('./zk-proof/trusted-setup'));const generateProof=(cov_2r5sq7jvz2.s[14]++,require('./zk-proof/generate-proof'));const verifier=(cov_2r5sq7jvz2.s[15]++,require('./zk-proof/verify-proof'));const generateVerify=(cov_2r5sq7jvz2.s[16]++,require('./zk-proof/generate-verify'));const generateCall=(cov_2r5sq7jvz2.s[17]++,require('./zk-proof/generate-call'));const ide=(cov_2r5sq7jvz2.s[18]++,require('./etherlime-ide/etherlime-ide'));const commands=(cov_2r5sq7jvz2.s[19]++,[{command:'ganache [port] [output] [fork] [gasPrice] [gasLimit] [mnemonic] [count]',description:'start etherlime ganache-cli instance with static accounts with a lot of ETH.',argumentsProcessor:yargs=>{cov_2r5sq7jvz2.f[0]++;cov_2r5sq7jvz2.s[20]++;yargs.positional('port',{describe:'port to run ganache-cli on',type:'number'});cov_2r5sq7jvz2.s[21]++;yargs.positional('output',{describe:'Defines the way that the logs are shown',type:'string',default:'normal',choices:['none','normal','structured']});cov_2r5sq7jvz2.s[22]++;yargs.positional('fork',{describe:'Define the fork network where etherlime ganache-cli can fork and continue to exists',type:'string'});cov_2r5sq7jvz2.s[23]++;yargs.positional('gasPrice',{describe:'The price of gas in wei - default is 20000000000',type:'number'});cov_2r5sq7jvz2.s[24]++;yargs.positional('gasLimit',{describe:'The block gas limit default is 0x6691b7',type:'number'});cov_2r5sq7jvz2.s[25]++;yargs.positional('mnemonic',{describe:'Pass mnemonic to generate account',type:'string'});cov_2r5sq7jvz2.s[26]++;yargs.positional('count',{describe:'Number of accounts to generate based on passed mnemonic',type:'number',default:1});},commandProcessor:argv=>{cov_2r5sq7jvz2.f[1]++;cov_2r5sq7jvz2.s[27]++;recordEvent('etherlime ganache',{argv});cov_2r5sq7jvz2.s[28]++;logger.storeOutputParameter(argv.output);cov_2r5sq7jvz2.s[29]++;try{cov_2r5sq7jvz2.s[30]++;ganache.run(argv.port,logger,argv.fork,argv.gasPrice,argv.gasLimit,argv.mnemonic,argv.count);}catch(err){cov_2r5sq7jvz2.s[31]++;console.error(err);}finally{cov_2r5sq7jvz2.s[32]++;logger.removeOutputStorage();}}},{command:'init [output] [zk]',description:'initialize deployment folder structure and deployment files ready for etherlime deploy',argumentsProcessor:yargs=>{cov_2r5sq7jvz2.f[2]++;cov_2r5sq7jvz2.s[33]++;yargs.positional('output',{describe:'Defines the way that the logs are shown',type:'string',default:'normal',choices:['none','normal','structured']});},argumentsProcessor:yargs=>{cov_2r5sq7jvz2.f[3]++;cov_2r5sq7jvz2.s[34]++;yargs.positional('zk',{describe:'Defines if to include in project a zk-proof folder with primary circuit for compiling',type:'string',default:false});},commandProcessor:async argv=>{cov_2r5sq7jvz2.f[4]++;cov_2r5sq7jvz2.s[35]++;recordEvent('etherlime init',{argv});cov_2r5sq7jvz2.s[36]++;logger.storeOutputParameter(argv.output);cov_2r5sq7jvz2.s[37]++;try{cov_2r5sq7jvz2.s[38]++;await init.run(argv.zk);}catch(err){cov_2r5sq7jvz2.s[39]++;console.error(err);}finally{cov_2r5sq7jvz2.s[40]++;logger.removeOutputStorage();}}},{command:'deploy [file] [network] [secret] [compile] [runs] [output]',description:'run the deployment script passed as file param (default ./deployment/deployer.js). You can optionally pass network param to be passed to the deployer for easy network switching. You can pass secret in order to pass non-committable data - suitable for private keys.',argumentsProcessor:yargs=>{cov_2r5sq7jvz2.f[5]++;cov_2r5sq7jvz2.s[41]++;yargs.positional('file',{describe:'port to run ganache-cli on',type:'string'});cov_2r5sq7jvz2.s[42]++;yargs.positional('network',{describe:'network param to pass to the deployment script',type:'string'});cov_2r5sq7jvz2.s[43]++;yargs.positional('secret',{describe:'secret string to be passed to your deployer. Useful for private keys or api keys',type:'string'});cov_2r5sq7jvz2.s[44]++;yargs.positional('compile',{describe:'Enable compilation of the smart contracts before their deployment. By default the deployment is done with a compilation',type:'boolean',default:true});cov_2r5sq7jvz2.s[45]++;yargs.positional('runs',{describe:'enables the optimizer and runs it the specified number of times',type:'number'});cov_2r5sq7jvz2.s[46]++;yargs.positional('output',{describe:'Defines the way that the logs are shown',type:'string',default:'normal',choices:['none','normal','structured']});},commandProcessor:async argv=>{cov_2r5sq7jvz2.f[6]++;cov_2r5sq7jvz2.s[47]++;logger.storeOutputParameter(argv.output);cov_2r5sq7jvz2.s[48]++;try{cov_2r5sq7jvz2.s[49]++;await deployer.run(argv.file,argv.network,argv.secret,argv.silent,argv.compile,argv.runs,argv.output);}catch(err){cov_2r5sq7jvz2.s[50]++;console.error(err);}finally{cov_2r5sq7jvz2.s[51]++;logger.removeOutputStorage();const statistics=(cov_2r5sq7jvz2.s[52]++,{argv});cov_2r5sq7jvz2.s[53]++;delete statistics.argv.secret;cov_2r5sq7jvz2.s[54]++;recordEvent('etherlime deploy',{statistics});}}},{command:'history [limit] [output]',description:'Show historical log of execution and reports of the executions.',argumentsProcessor:yargs=>{cov_2r5sq7jvz2.f[7]++;cov_2r5sq7jvz2.s[55]++;yargs.positional('limit',{describe:'Limit to the execution logs',type:'number',default:5});cov_2r5sq7jvz2.s[56]++;yargs.positional('output',{describe:'Defines the way that the logs are shown',type:'string',default:'normal',choices:['none','normal','structured']});},commandProcessor:async argv=>{cov_2r5sq7jvz2.f[8]++;cov_2r5sq7jvz2.s[57]++;recordEvent('etherlime history',{argv});cov_2r5sq7jvz2.s[58]++;logger.storeOutputParameter(argv.output);cov_2r5sq7jvz2.s[59]++;try{cov_2r5sq7jvz2.s[60]++;await history.run(argv.limit,argv.output);}catch(err){cov_2r5sq7jvz2.s[61]++;console.error(err);}finally{cov_2r5sq7jvz2.s[62]++;logger.removeOutputStorage();}}},{command:'compile [dir] [runs] [solc-version] [docker] [list] [all] [quite] [output] [buildDirectory]',description:'Compiles the smart contracts that are in the directory contracts in the path provided by the dir parameter (defaults to .)',argumentsProcessor:yargs=>{cov_2r5sq7jvz2.f[9]++;cov_2r5sq7jvz2.s[63]++;yargs.positional('dir',{describe:'Specifies the root dir to read the contracts and place the build folder',type:'string',default:'.'});cov_2r5sq7jvz2.s[64]++;yargs.positional('runs',{describe:'enables the optimizer and runs it the specified number of times',type:'number'});cov_2r5sq7jvz2.s[65]++;yargs.positional('solc-version',{describe:'Sets the solc version used for compiling the smart contracts. By default it use the solc version from the node modules',type:'string'});cov_2r5sq7jvz2.s[66]++;yargs.positional('docker',{describe:'Enable the usage of a docker. By default it is set to false.',type:'boolean',default:false});cov_2r5sq7jvz2.s[67]++;yargs.positional('list',{describe:'List available solc versions. The default is solcjs stable release',type:'string'});cov_2r5sq7jvz2.s[68]++;yargs.positional('all',{describe:'Print the full list',type:'boolean',default:false});cov_2r5sq7jvz2.s[69]++;yargs.positional('quite',{describe:'Disable verboseness during compilation. By the default is set to false.',type:'boolean',default:false});cov_2r5sq7jvz2.s[70]++;yargs.positional('output',{describe:'Defines the way that the logs are shown',type:'string',default:'normal',choices:['none','normal','structured']});cov_2r5sq7jvz2.s[71]++;yargs.positional('buildDirectory',{describe:'Defines where to place builded contracts',type:'string'});cov_2r5sq7jvz2.s[72]++;yargs.positional('workingDirectory',{describe:'Defines which folder to use for reading contracts from, instead of the default one: ./contracts',type:'string'});},commandProcessor:async argv=>{cov_2r5sq7jvz2.f[10]++;cov_2r5sq7jvz2.s[73]++;recordEvent('etherlime compile',{argv});cov_2r5sq7jvz2.s[74]++;logger.storeOutputParameter(argv.output);cov_2r5sq7jvz2.s[75]++;try{cov_2r5sq7jvz2.s[76]++;await compiler.run(argv.dir,argv.runs,argv.solcVersion,argv.docker,argv.list,argv.all,argv.quite,argv.buildDirectory,argv.workingDirectory);}catch(err){cov_2r5sq7jvz2.s[77]++;console.error(err);}finally{cov_2r5sq7jvz2.s[78]++;logger.removeOutputStorage();}}},{command:'test [path] [timeout] [skip-compilation] [gas-report] [runs] [solc-version] [output] [port]',description:'Run all the tests that are in the test directory',argumentsProcessor:yargs=>{cov_2r5sq7jvz2.f[11]++;cov_2r5sq7jvz2.s[79]++;yargs.positional('path',{describe:'Specifies the path in which tests should be ran',type:'string',default:'./test'});cov_2r5sq7jvz2.s[80]++;yargs.positional('skip-compilation',{describe:'Skips compilation of the contracts before running the tests',type:'boolean',default:'false'});cov_2r5sq7jvz2.s[81]++;yargs.positional('gas-report',{describe:'Enables Gas reporting future that will show Gas Usage after each test.',type:'boolean',default:'false'});cov_2r5sq7jvz2.s[82]++;yargs.positional('runs',{describe:'enables the optimizer and runs it the specified number of times',type:'number'});cov_2r5sq7jvz2.s[83]++;yargs.positional('solc-version',{describe:'Sets the solc version used for compiling the smart contracts. By default it use the solc version from the node modules',type:'string'});cov_2r5sq7jvz2.s[84]++;yargs.positional('output',{describe:'Defines the way that the logs are shown',type:'string',default:'none',choices:['none','normal','structured']});cov_2r5sq7jvz2.s[85]++;yargs.positional('port',{describe:'The port that the etherlime ganache is running in order to instantiate the test accounts',type:'number',default:8545});cov_2r5sq7jvz2.s[86]++;yargs.positional('timeout',{describe:'Set test timeout in milliseconds',type:'number',default:2000});},commandProcessor:async argv=>{cov_2r5sq7jvz2.f[12]++;cov_2r5sq7jvz2.s[87]++;recordEvent('etherlime test',{argv});cov_2r5sq7jvz2.s[88]++;logger.storeOutputParameter(argv.output);cov_2r5sq7jvz2.s[89]++;try{cov_2r5sq7jvz2.s[90]++;await test.run(argv.path,argv.timeout,argv.skipCompilation,argv.solcVersion,argv.gasReport,argv.port);}catch(err){cov_2r5sq7jvz2.s[91]++;console.error(err);}finally{cov_2r5sq7jvz2.s[92]++;logger.removeOutputStorage();}}},{command:'coverage [path] [timeout] [port] [runs] [solcVersion] [buildDirectory] [workingDirectory] [html]',description:'Run all tests with code coverage.',argumentsProcessor:yargs=>{cov_2r5sq7jvz2.f[13]++;cov_2r5sq7jvz2.s[93]++;yargs.positional('path',{describe:'Specifies the path in which tests should be ran',type:'string',default:'./test'});cov_2r5sq7jvz2.s[94]++;yargs.positional('port',{describe:'The port to run the solidity coverage testrpc (compatible with etherlime ganache deployer)',type:'number',default:8545});cov_2r5sq7jvz2.s[95]++;yargs.positional('runs',{describe:'enables the optimizer on the compiler and specifies the runs',type:'number'});cov_2r5sq7jvz2.s[96]++;yargs.positional('solcVersion',{describe:'Sets the solc version used for compiling the smart contracts. By default it use the solc version from the node modules',type:'string'});cov_2r5sq7jvz2.s[97]++;yargs.positional('buildDirectory',{describe:'Defines which folder to use for reading builded contracts from, instead of the default one: ./build',type:'string',default:'./build'});cov_2r5sq7jvz2.s[98]++;yargs.positional('workingDirectory',{describe:'Defines which folder to use for reading contracts from, instead of the default one: ./contracts',type:'string',default:'./contracts'});cov_2r5sq7jvz2.s[99]++;yargs.positional('html',{describe:'Defines whether to open automatically the html coverage report located in: ./coverage',type:'string',default:'false'});cov_2r5sq7jvz2.s[100]++;yargs.positional('timeout',{describe:'Set test timeout in milliseconds',type:'number',default:2000});},commandProcessor:async argv=>{cov_2r5sq7jvz2.f[14]++;cov_2r5sq7jvz2.s[101]++;recordEvent('etherlime coverage',{argv});cov_2r5sq7jvz2.s[102]++;try{cov_2r5sq7jvz2.s[103]++;await test.runCoverage(argv.path,argv.timeout,argv.port,argv.runs,argv.solcVersion,argv.buildDirectory,argv.workingDirectory,argv.html);}catch(e){cov_2r5sq7jvz2.s[104]++;console.error(e);cov_2r5sq7jvz2.s[105]++;global.provider.stop();}finally{cov_2r5sq7jvz2.s[106]++;logger.removeOutputStorage();}}},{command:'debug [transactionHash] [port]',description:'Debug transaction hash',argumentsProcessor:yargs=>{cov_2r5sq7jvz2.f[15]++;cov_2r5sq7jvz2.s[107]++;yargs.positional('transactionHash',{describe:'Specifies the transaction hash',type:'string'});cov_2r5sq7jvz2.s[108]++;yargs.positional('port',{describe:'The port to run the debugger for listening for local ganache',type:'number',default:8545});},commandProcessor:async argv=>{cov_2r5sq7jvz2.f[16]++;cov_2r5sq7jvz2.s[109]++;recordEvent('etherlime debbuger',{argv});cov_2r5sq7jvz2.s[110]++;try{cov_2r5sq7jvz2.s[111]++;await debug.run(argv.transactionHash,argv.port);}catch(err){cov_2r5sq7jvz2.s[112]++;console.error(err);}finally{cov_2r5sq7jvz2.s[113]++;logger.removeOutputStorage();}}},{command:'shape [name]',description:'Shapes ready to use dApp containing all files and settings.',argumentsProcessor:yargs=>{cov_2r5sq7jvz2.f[17]++;cov_2r5sq7jvz2.s[114]++;yargs.positional('name',{describe:'Specifies the name of the framework or library that the project will be build up.',type:'string'});},commandProcessor:argv=>{cov_2r5sq7jvz2.f[18]++;cov_2r5sq7jvz2.s[115]++;recordEvent('etherlime shape',{argv});cov_2r5sq7jvz2.s[116]++;logger.storeOutputParameter(argv.output);cov_2r5sq7jvz2.s[117]++;try{cov_2r5sq7jvz2.s[118]++;shape.run(argv.name);}catch(err){cov_2r5sq7jvz2.s[119]++;console.error(err);}finally{cov_2r5sq7jvz2.s[120]++;logger.removeOutputStorage();}}},{command:'opt-out',description:`Opt out of the event tracking etherlime uses in order to improve itself (please don't)`,argumentsProcessor:yargs=>{cov_2r5sq7jvz2.f[19]++;},commandProcessor:argv=>{cov_2r5sq7jvz2.f[20]++;cov_2r5sq7jvz2.s[121]++;recordEvent('etherlime opt-out',{argv});cov_2r5sq7jvz2.s[122]++;try{cov_2r5sq7jvz2.s[123]++;eventTracker.optOutUser();}catch(err){cov_2r5sq7jvz2.s[124]++;console.error(err);}finally{cov_2r5sq7jvz2.s[125]++;logger.removeOutputStorage();}}},{command:'flatten [file] [solcVersion]',description:'Flattens a smart contract combining all Solidity code in one file along with imported sources.',argumentsProcessor:yargs=>{cov_2r5sq7jvz2.f[21]++;cov_2r5sq7jvz2.s[126]++;yargs.positional('file',{describe:'Specifies the file to be flattened',type:'string'});cov_2r5sq7jvz2.s[127]++;yargs.positional('solcVersion',{describe:'Specifies the version of the solidity compiler',type:'string'});},commandProcessor:async argv=>{cov_2r5sq7jvz2.f[22]++;cov_2r5sq7jvz2.s[128]++;try{cov_2r5sq7jvz2.s[129]++;await flatten.run(argv.file,argv.solcVersion);}catch(err){cov_2r5sq7jvz2.s[130]++;console.error(err);}finally{cov_2r5sq7jvz2.s[131]++;logger.removeOutputStorage();}}},{command:'ide [port]',description:'Runs web-based Solidity IDE that works with the file system',argumentsProcessor:yargs=>{cov_2r5sq7jvz2.f[23]++;cov_2r5sq7jvz2.s[132]++;yargs.positional('port',{describe:'Specifies the port ganache is running on',type:'string'});},commandProcessor:async argv=>{cov_2r5sq7jvz2.f[24]++;cov_2r5sq7jvz2.s[133]++;try{cov_2r5sq7jvz2.s[134]++;await ide.run(argv.port);}catch(err){cov_2r5sq7jvz2.s[135]++;console.error(err);}finally{cov_2r5sq7jvz2.s[136]++;logger.removeOutputStorage();}}},{command:'zk <zk-command>',description:'Ability to work with Zero Knowledge Concept',argumentsProcessor:yargs=>{cov_2r5sq7jvz2.f[25]++;cov_2r5sq7jvz2.s[137]++;yargs.positional('zk-command',{describe:"Specify the desired command that you want to run: ['compile', 'setup', 'proof', 'verify', 'generate', 'call']",type:'string',choices:['compile','setup','proof','verify','generate','call']});},commandProcessor:async argv=>{cov_2r5sq7jvz2.f[26]++;cov_2r5sq7jvz2.s[138]++;try{cov_2r5sq7jvz2.s[139]++;await zkCommandProcessor(argv);}catch(err){cov_2r5sq7jvz2.s[140]++;console.error(err);}finally{cov_2r5sq7jvz2.s[141]++;logger.removeOutputStorage();}}}]);cov_2r5sq7jvz2.s[142]++;const zkCommandProcessor=async argv=>{cov_2r5sq7jvz2.f[27]++;// Set default command values for optional params:
let signal=(cov_2r5sq7jvz2.s[143]++,'input.json');let circuit=(cov_2r5sq7jvz2.s[144]++,'circuit.json');let provingKey=(cov_2r5sq7jvz2.s[145]++,'circuit_proving_key.json');let publicSignals=(cov_2r5sq7jvz2.s[146]++,'circuit_public_signals.json');let proof=(cov_2r5sq7jvz2.s[147]++,'circuit_proof.json');let verifierKey=(cov_2r5sq7jvz2.s[148]++,'circuit_verification_key.json');// check command and optional scenarios:
cov_2r5sq7jvz2.s[149]++;switch(argv.zkCommand){case'compile':cov_2r5sq7jvz2.b[0][0]++;cov_2r5sq7jvz2.s[150]++;await circuitCompile.run();cov_2r5sq7jvz2.s[151]++;break;case'setup':cov_2r5sq7jvz2.b[0][1]++;cov_2r5sq7jvz2.s[152]++;await trustedSetup.run();cov_2r5sq7jvz2.s[153]++;break;case'proof':cov_2r5sq7jvz2.b[0][2]++;cov_2r5sq7jvz2.s[154]++;if(argv.signal){cov_2r5sq7jvz2.b[1][0]++;cov_2r5sq7jvz2.s[155]++;signal=argv.signal;}else{cov_2r5sq7jvz2.b[1][1]++;}cov_2r5sq7jvz2.s[156]++;if(argv.circuit){cov_2r5sq7jvz2.b[2][0]++;cov_2r5sq7jvz2.s[157]++;circuit=argv.circuit;}else{cov_2r5sq7jvz2.b[2][1]++;}cov_2r5sq7jvz2.s[158]++;if(argv.provingKey){cov_2r5sq7jvz2.b[3][0]++;cov_2r5sq7jvz2.s[159]++;provingKey=argv.provingKey;}else{cov_2r5sq7jvz2.b[3][1]++;}cov_2r5sq7jvz2.s[160]++;await generateProof.run(signal,circuit,provingKey);cov_2r5sq7jvz2.s[161]++;break;case'verify':cov_2r5sq7jvz2.b[0][3]++;cov_2r5sq7jvz2.s[162]++;if(argv.publicSignals){cov_2r5sq7jvz2.b[4][0]++;cov_2r5sq7jvz2.s[163]++;publicSignals=argv.publicSignals;}else{cov_2r5sq7jvz2.b[4][1]++;}cov_2r5sq7jvz2.s[164]++;if(argv.proof){cov_2r5sq7jvz2.b[5][0]++;cov_2r5sq7jvz2.s[165]++;proof=argv.proof;}else{cov_2r5sq7jvz2.b[5][1]++;}cov_2r5sq7jvz2.s[166]++;if(argv.verifierKey){cov_2r5sq7jvz2.b[6][0]++;cov_2r5sq7jvz2.s[167]++;verifierKey=argv.verifierKey;}else{cov_2r5sq7jvz2.b[6][1]++;}cov_2r5sq7jvz2.s[168]++;await verifier.run(publicSignals,proof,verifierKey);cov_2r5sq7jvz2.s[169]++;break;case'generate':cov_2r5sq7jvz2.b[0][4]++;cov_2r5sq7jvz2.s[170]++;if(argv.verifierKey){cov_2r5sq7jvz2.b[7][0]++;cov_2r5sq7jvz2.s[171]++;verifierKey=argv.verifierKey;}else{cov_2r5sq7jvz2.b[7][1]++;}cov_2r5sq7jvz2.s[172]++;await generateVerify.run(verifierKey);cov_2r5sq7jvz2.s[173]++;break;case'call':cov_2r5sq7jvz2.b[0][5]++;cov_2r5sq7jvz2.s[174]++;if(argv.publicSignals){cov_2r5sq7jvz2.b[8][0]++;cov_2r5sq7jvz2.s[175]++;publicSignals=argv.publicSignals;}else{cov_2r5sq7jvz2.b[8][1]++;}cov_2r5sq7jvz2.s[176]++;if(argv.proof){cov_2r5sq7jvz2.b[9][0]++;cov_2r5sq7jvz2.s[177]++;proof=argv.proof;}else{cov_2r5sq7jvz2.b[9][1]++;}cov_2r5sq7jvz2.s[178]++;await generateCall.run(publicSignals,proof);cov_2r5sq7jvz2.s[179]++;break;}};cov_2r5sq7jvz2.s[180]++;module.exports=commands;