var cov_1jei5ya9sh=function(){var path="/Users/desimiramitkova/Projects/etherlime/cli-commands/flattener/flatten.js";var hash="e5089bf03ff6ada9cb99c0d4de0c73f46da09701";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/desimiramitkova/Projects/etherlime/cli-commands/flattener/flatten.js",statementMap:{"0":{start:{line:2,column:11},end:{line:2,column:30}},"1":{start:{line:3,column:13},end:{line:3,column:28}},"2":{start:{line:4,column:15},end:{line:4,column:64}},"3":{start:{line:5,column:27},end:{line:5,column:49}},"4":{start:{line:7,column:21},end:{line:7,column:55}},"5":{start:{line:8,column:20},end:{line:8,column:42}},"6":{start:{line:10,column:12},end:{line:26,column:1}},"7":{start:{line:11,column:1},end:{line:13,column:2}},"8":{start:{line:12,column:2},end:{line:12,column:39}},"9":{start:{line:15,column:1},end:{line:23,column:2}},"10":{start:{line:16,column:22},end:{line:16,column:65}},"11":{start:{line:17,column:22},end:{line:17,column:49}},"12":{start:{line:18,column:21},end:{line:18,column:61}},"13":{start:{line:19,column:2},end:{line:19,column:48}},"14":{start:{line:20,column:2},end:{line:20,column:80}},"15":{start:{line:22,column:2},end:{line:22,column:29}},"16":{start:{line:29,column:23},end:{line:39,column:1}},"17":{start:{line:30,column:12},end:{line:30,column:33}},"18":{start:{line:32,column:1},end:{line:36,column:2}},"19":{start:{line:33,column:2},end:{line:33,column:74}},"20":{start:{line:35,column:2},end:{line:35,column:9}},"21":{start:{line:38,column:1},end:{line:38,column:21}},"22":{start:{line:41,column:21},end:{line:43,column:1}},"23":{start:{line:42,column:1},end:{line:42,column:26}},"24":{start:{line:46,column:19},end:{line:67,column:1}},"25":{start:{line:47,column:20},end:{line:47,column:31}},"26":{start:{line:48,column:1},end:{line:64,column:2}},"27":{start:{line:50,column:2},end:{line:63,column:3}},"28":{start:{line:50,column:14},end:{line:50,column:15}},"29":{start:{line:51,column:21},end:{line:51,column:37}},"30":{start:{line:52,column:17},end:{line:52,column:67}},"31":{start:{line:54,column:3},end:{line:57,column:4}},"32":{start:{line:55,column:4},end:{line:55,column:39}},"33":{start:{line:56,column:4},end:{line:56,column:12}},"34":{start:{line:59,column:22},end:{line:59,column:79}},"35":{start:{line:60,column:3},end:{line:62,column:4}},"36":{start:{line:61,column:4},end:{line:61,column:39}},"37":{start:{line:66,column:1},end:{line:66,column:20}},"38":{start:{line:70,column:28},end:{line:81,column:1}},"39":{start:{line:71,column:15},end:{line:71,column:16}},"40":{start:{line:72,column:2},end:{line:79,column:3}},"41":{start:{line:72,column:14},end:{line:72,column:15}},"42":{start:{line:73,column:23},end:{line:73,column:60}},"43":{start:{line:74,column:3},end:{line:74,column:55}},"44":{start:{line:75,column:18},end:{line:75,column:60}},"45":{start:{line:76,column:3},end:{line:78,column:4}},"46":{start:{line:77,column:4},end:{line:77,column:13}},"47":{start:{line:80,column:1},end:{line:80,column:15}},"48":{start:{line:83,column:17},end:{line:87,column:1}},"49":{start:{line:84,column:1},end:{line:86,column:2}},"50":{start:{line:85,column:2},end:{line:85,column:32}},"51":{start:{line:89,column:20},end:{line:103,column:1}},"52":{start:{line:90,column:16},end:{line:90,column:47}},"53":{start:{line:91,column:20},end:{line:91,column:49}},"54":{start:{line:93,column:1},end:{line:93,column:59}},"55":{start:{line:95,column:1},end:{line:100,column:3}},"56":{start:{line:96,column:16},end:{line:96,column:50}},"57":{start:{line:97,column:2},end:{line:97,column:44}},"58":{start:{line:99,column:2},end:{line:99,column:42}},"59":{start:{line:102,column:1},end:{line:102,column:18}},"60":{start:{line:105,column:28},end:{line:113,column:1}},"61":{start:{line:106,column:23},end:{line:106,column:88}},"62":{start:{line:108,column:1},end:{line:110,column:2}},"63":{start:{line:109,column:2},end:{line:109,column:24}},"64":{start:{line:112,column:1},end:{line:112,column:51}},"65":{start:{line:115,column:32},end:{line:117,column:1}},"66":{start:{line:116,column:4},end:{line:116,column:73}},"67":{start:{line:119,column:21},end:{line:126,column:1}},"68":{start:{line:120,column:1},end:{line:125,column:2}},"69":{start:{line:120,column:13},end:{line:120,column:14}},"70":{start:{line:121,column:17},end:{line:121,column:56}},"71":{start:{line:122,column:2},end:{line:124,column:3}},"72":{start:{line:123,column:3},end:{line:123,column:26}},"73":{start:{line:129,column:0},end:{line:131,column:1}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:10,column:12},end:{line:10,column:13}},loc:{start:{line:10,column:41},end:{line:26,column:1}},line:10},"1":{name:"(anonymous_1)",decl:{start:{line:29,column:23},end:{line:29,column:24}},loc:{start:{line:29,column:39},end:{line:39,column:1}},line:29},"2":{name:"(anonymous_2)",decl:{start:{line:41,column:21},end:{line:41,column:22}},loc:{start:{line:41,column:32},end:{line:43,column:1}},line:41},"3":{name:"(anonymous_3)",decl:{start:{line:46,column:19},end:{line:46,column:20}},loc:{start:{line:46,column:53},end:{line:67,column:1}},line:46},"4":{name:"(anonymous_4)",decl:{start:{line:70,column:28},end:{line:70,column:29}},loc:{start:{line:70,column:70},end:{line:81,column:1}},line:70},"5":{name:"(anonymous_5)",decl:{start:{line:83,column:17},end:{line:83,column:18}},loc:{start:{line:83,column:48},end:{line:87,column:1}},line:83},"6":{name:"(anonymous_6)",decl:{start:{line:89,column:20},end:{line:89,column:21}},loc:{start:{line:89,column:63},end:{line:103,column:1}},line:89},"7":{name:"(anonymous_7)",decl:{start:{line:95,column:22},end:{line:95,column:23}},loc:{start:{line:95,column:40},end:{line:100,column:2}},line:95},"8":{name:"(anonymous_8)",decl:{start:{line:105,column:28},end:{line:105,column:29}},loc:{start:{line:105,column:71},end:{line:113,column:1}},line:105},"9":{name:"(anonymous_9)",decl:{start:{line:115,column:32},end:{line:115,column:33}},loc:{start:{line:115,column:49},end:{line:117,column:1}},line:115},"10":{name:"(anonymous_10)",decl:{start:{line:119,column:21},end:{line:119,column:22}},loc:{start:{line:119,column:52},end:{line:126,column:1}},line:119}},branchMap:{"0":{loc:{start:{line:11,column:1},end:{line:13,column:2}},type:"if",locations:[{start:{line:11,column:1},end:{line:13,column:2}},{start:{line:11,column:1},end:{line:13,column:2}}],line:11},"1":{loc:{start:{line:54,column:3},end:{line:57,column:4}},type:"if",locations:[{start:{line:54,column:3},end:{line:57,column:4}},{start:{line:54,column:3},end:{line:57,column:4}}],line:54},"2":{loc:{start:{line:60,column:3},end:{line:62,column:4}},type:"if",locations:[{start:{line:60,column:3},end:{line:62,column:4}},{start:{line:60,column:3},end:{line:62,column:4}}],line:60},"3":{loc:{start:{line:76,column:3},end:{line:78,column:4}},type:"if",locations:[{start:{line:76,column:3},end:{line:78,column:4}},{start:{line:76,column:3},end:{line:78,column:4}}],line:76},"4":{loc:{start:{line:84,column:1},end:{line:86,column:2}},type:"if",locations:[{start:{line:84,column:1},end:{line:86,column:2}},{start:{line:84,column:1},end:{line:86,column:2}}],line:84},"5":{loc:{start:{line:108,column:1},end:{line:110,column:2}},type:"if",locations:[{start:{line:108,column:1},end:{line:110,column:2}},{start:{line:108,column:1},end:{line:110,column:2}}],line:108},"6":{loc:{start:{line:122,column:2},end:{line:124,column:3}},type:"if",locations:[{start:{line:122,column:2},end:{line:124,column:3}},{start:{line:122,column:2},end:{line:124,column:3}}],line:122}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"e5089bf03ff6ada9cb99c0d4de0c73f46da09701"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const fs=(cov_1jei5ya9sh.s[0]++,require('fs-extra'));const path=(cov_1jei5ya9sh.s[1]++,require('path'));let Profiler=(cov_1jei5ya9sh.s[2]++,require("../compiler/etherlime-compile/profiler"));let{resolver,supplier}=(cov_1jei5ya9sh.s[3]++,require('./config.js'));const versionRegex=(cov_1jei5ya9sh.s[4]++,/^\s*pragma\ssolidity\s+(.*?)\s*;/);//regex for pragma solidity version 
const importRegex=(cov_1jei5ya9sh.s[5]++,/^\s*import(\s+).*$/gm);//regex for imported files
cov_1jei5ya9sh.s[6]++;const run=async(file,solcVersion)=>{cov_1jei5ya9sh.f[0]++;cov_1jei5ya9sh.s[7]++;if(solcVersion){cov_1jei5ya9sh.b[0][0]++;cov_1jei5ya9sh.s[8]++;supplier.config.version=solcVersion;}else{cov_1jei5ya9sh.b[0][1]++;}cov_1jei5ya9sh.s[9]++;try{let resolvedFiles=(cov_1jei5ya9sh.s[10]++,await resolveSources(`./contracts/${file}`));let resolvedPaths=(cov_1jei5ya9sh.s[11]++,resolvePaths(resolvedFiles));let orderedPaths=(cov_1jei5ya9sh.s[12]++,orderPaths(resolvedFiles,resolvedPaths));cov_1jei5ya9sh.s[13]++;recordFiles(file,resolvedFiles,orderedPaths);cov_1jei5ya9sh.s[14]++;console.log('Contract was flattened successfully. Check your "./flat" folder');}catch(e){cov_1jei5ya9sh.s[15]++;throw new Error(e.message);}};cov_1jei5ya9sh.s[16]++;const resolveSources=async file=>{cov_1jei5ya9sh.f[1]++;let solc=(cov_1jei5ya9sh.s[17]++,await supplier.load());let resolvedFiles;cov_1jei5ya9sh.s[18]++;try{cov_1jei5ya9sh.s[19]++;resolvedFiles=await Profiler.resolveAllSources(resolver,[file],solc);}catch(e){cov_1jei5ya9sh.s[20]++;throw e;}cov_1jei5ya9sh.s[21]++;return resolvedFiles;};cov_1jei5ya9sh.s[22]++;const resolvePaths=files=>{cov_1jei5ya9sh.f[2]++;cov_1jei5ya9sh.s[23]++;return Object.keys(files);};//sort files according imported dependencies; contracts with no imports are added first
cov_1jei5ya9sh.s[24]++;const orderPaths=(resolvedFiles,resolvedPaths)=>{cov_1jei5ya9sh.f[3]++;let orderedPaths=(cov_1jei5ya9sh.s[25]++,new Array());cov_1jei5ya9sh.s[26]++;while(resolvedPaths.length>orderedPaths.length){cov_1jei5ya9sh.s[27]++;for(let i=(cov_1jei5ya9sh.s[28]++,0);i<resolvedPaths.length;i++){let currentPath=(cov_1jei5ya9sh.s[29]++,resolvedPaths[i]);let imports=(cov_1jei5ya9sh.s[30]++,resolvedFiles[currentPath].body.match(importRegex));cov_1jei5ya9sh.s[31]++;if(!imports){cov_1jei5ya9sh.b[1][0]++;cov_1jei5ya9sh.s[32]++;pushPath(orderedPaths,currentPath);cov_1jei5ya9sh.s[33]++;continue;}else{cov_1jei5ya9sh.b[1][1]++;}let importsCount=(cov_1jei5ya9sh.s[34]++,countOrderedImports(imports,resolvedPaths,orderedPaths));cov_1jei5ya9sh.s[35]++;if(importsCount===imports.length){cov_1jei5ya9sh.b[2][0]++;cov_1jei5ya9sh.s[36]++;pushPath(orderedPaths,currentPath);}else{cov_1jei5ya9sh.b[2][1]++;}}}cov_1jei5ya9sh.s[37]++;return orderedPaths;};//counts if all imported sources in current file has already been ordered
cov_1jei5ya9sh.s[38]++;const countOrderedImports=(imports,resolvedPaths,orderedPaths)=>{cov_1jei5ya9sh.f[4]++;let counter=(cov_1jei5ya9sh.s[39]++,0);cov_1jei5ya9sh.s[40]++;for(let i=(cov_1jei5ya9sh.s[41]++,0);i<imports.length;i++){let currentImport=(cov_1jei5ya9sh.s[42]++,imports[i].replace(/[\n\'\"\;]/g,''));//removes quotes and semicolon
cov_1jei5ya9sh.s[43]++;currentImport=path.basename(currentImport,'.sol');//extract the base name of file
let fullPath=(cov_1jei5ya9sh.s[44]++,findFullPath(resolvedPaths,currentImport));//find full path
cov_1jei5ya9sh.s[45]++;if(orderedPaths.includes(fullPath)){cov_1jei5ya9sh.b[3][0]++;cov_1jei5ya9sh.s[46]++;counter++;}else{cov_1jei5ya9sh.b[3][1]++;}}cov_1jei5ya9sh.s[47]++;return counter;};cov_1jei5ya9sh.s[48]++;const pushPath=(orderedPaths,currentPath)=>{cov_1jei5ya9sh.f[5]++;cov_1jei5ya9sh.s[49]++;if(!orderedPaths.includes(currentPath)){cov_1jei5ya9sh.b[4][0]++;cov_1jei5ya9sh.s[50]++;orderedPaths.push(currentPath);}else{cov_1jei5ya9sh.b[4][1]++;}};cov_1jei5ya9sh.s[51]++;const recordFiles=(fileName,resolvedFiles,orderedPaths)=>{cov_1jei5ya9sh.f[6]++;let baseName=(cov_1jei5ya9sh.s[52]++,path.basename(fileName,'.sol'));let flatFileName=(cov_1jei5ya9sh.s[53]++,`./flat/${baseName}_flat.sol`);cov_1jei5ya9sh.s[54]++;createFolderAndFile(resolvedFiles,fileName,flatFileName);cov_1jei5ya9sh.s[55]++;orderedPaths.forEach(dependencyPath=>{cov_1jei5ya9sh.f[7]++;let content=(cov_1jei5ya9sh.s[56]++,resolvedFiles[dependencyPath].body);cov_1jei5ya9sh.s[57]++;content=removeVersionAndImports(content);cov_1jei5ya9sh.s[58]++;fs.appendFileSync(flatFileName,content);});cov_1jei5ya9sh.s[59]++;orderedPaths=[];};cov_1jei5ya9sh.s[60]++;const createFolderAndFile=(resolvedFiles,fileName,flatFileName)=>{cov_1jei5ya9sh.f[8]++;let solidityVersion=(cov_1jei5ya9sh.s[61]++,resolvedFiles[`./contracts/${fileName}`].body.match(versionRegex));//takes pragma solidity version
cov_1jei5ya9sh.s[62]++;if(!fs.existsSync('./flat')){cov_1jei5ya9sh.b[5][0]++;cov_1jei5ya9sh.s[63]++;fs.mkdirSync('./flat');}else{cov_1jei5ya9sh.b[5][1]++;}cov_1jei5ya9sh.s[64]++;fs.writeFileSync(flatFileName,solidityVersion[0]);};cov_1jei5ya9sh.s[65]++;const removeVersionAndImports=fileContent=>{cov_1jei5ya9sh.f[9]++;cov_1jei5ya9sh.s[66]++;return fileContent.replace(versionRegex,'').replace(importRegex,'');//removes pragma solidity version and imported files
};cov_1jei5ya9sh.s[67]++;const findFullPath=(resolvedPaths,importPath)=>{cov_1jei5ya9sh.f[10]++;cov_1jei5ya9sh.s[68]++;for(let i=(cov_1jei5ya9sh.s[69]++,0);i<resolvedPaths.length;i++){let basePath=(cov_1jei5ya9sh.s[70]++,path.basename(resolvedPaths[i],'.sol'));cov_1jei5ya9sh.s[71]++;if(basePath===importPath){cov_1jei5ya9sh.b[6][0]++;cov_1jei5ya9sh.s[72]++;return resolvedPaths[i];}else{cov_1jei5ya9sh.b[6][1]++;}}};cov_1jei5ya9sh.s[73]++;module.exports={run};