var cov_13sqpps68z=function(){var path="/Users/desimiramitkova/Projects/etherlime/packages/etherlime/cli-commands/compiler/etherlime-expect/index.js";var hash="e62e2104ce881c02a4e2b8c4dd09039d0379ea63";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/desimiramitkova/Projects/etherlime/packages/etherlime/cli-commands/compiler/etherlime-expect/index.js",statementMap:{"0":{start:{line:2,column:14},end:{line:8,column:1}},"1":{start:{line:3,column:4},end:{line:7,column:7}},"2":{start:{line:4,column:8},end:{line:6,column:9}},"3":{start:{line:5,column:12},end:{line:5,column:83}},"4":{start:{line:10,column:10},end:{line:28,column:1}},"5":{start:{line:11,column:16},end:{line:11,column:18}},"6":{start:{line:13,column:4},end:{line:19,column:7}},"7":{start:{line:14,column:8},end:{line:18,column:9}},"8":{start:{line:15,column:12},end:{line:15,column:26}},"9":{start:{line:17,column:12},end:{line:17,column:26}},"10":{start:{line:21,column:16},end:{line:23,column:6}},"11":{start:{line:22,column:8},end:{line:22,column:25}},"12":{start:{line:25,column:4},end:{line:25,column:27}},"13":{start:{line:25,column:20},end:{line:25,column:27}},"14":{start:{line:27,column:4},end:{line:27,column:109}},"15":{start:{line:30,column:0},end:{line:33,column:2}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:2,column:14},end:{line:2,column:15}},loc:{start:{line:2,column:42},end:{line:8,column:1}},line:2},"1":{name:"(anonymous_1)",decl:{start:{line:3,column:26},end:{line:3,column:27}},loc:{start:{line:3,column:35},end:{line:7,column:5}},line:3},"2":{name:"(anonymous_2)",decl:{start:{line:10,column:10},end:{line:10,column:11}},loc:{start:{line:10,column:38},end:{line:28,column:1}},line:10},"3":{name:"(anonymous_3)",decl:{start:{line:13,column:26},end:{line:13,column:27}},loc:{start:{line:13,column:35},end:{line:19,column:5}},line:13},"4":{name:"(anonymous_4)",decl:{start:{line:21,column:29},end:{line:21,column:30}},loc:{start:{line:21,column:43},end:{line:23,column:5}},line:21}},branchMap:{"0":{loc:{start:{line:4,column:8},end:{line:6,column:9}},type:"if",locations:[{start:{line:4,column:8},end:{line:6,column:9}},{start:{line:4,column:8},end:{line:6,column:9}}],line:4},"1":{loc:{start:{line:14,column:8},end:{line:18,column:9}},type:"if",locations:[{start:{line:14,column:8},end:{line:18,column:9}},{start:{line:14,column:8},end:{line:18,column:9}}],line:14},"2":{loc:{start:{line:25,column:4},end:{line:25,column:27}},type:"if",locations:[{start:{line:25,column:4},end:{line:25,column:27}},{start:{line:25,column:4},end:{line:25,column:27}}],line:25}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"e62e2104ce881c02a4e2b8c4dd09039d0379ea63"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_13sqpps68z.s[0]++;let options=(options,expected_keys)=>{cov_13sqpps68z.f[0]++;cov_13sqpps68z.s[1]++;expected_keys.forEach(key=>{cov_13sqpps68z.f[1]++;cov_13sqpps68z.s[2]++;if(options[key]==null){cov_13sqpps68z.b[0][0]++;cov_13sqpps68z.s[3]++;throw new Error(`Expected parameter "${key}" not passed to function.`);}else{cov_13sqpps68z.b[0][1]++;}});};cov_13sqpps68z.s[4]++;let one=(options,expected_keys)=>{cov_13sqpps68z.f[2]++;let found=(cov_13sqpps68z.s[5]++,[]);cov_13sqpps68z.s[6]++;expected_keys.forEach(key=>{cov_13sqpps68z.f[3]++;cov_13sqpps68z.s[7]++;if(options[key]!=null){cov_13sqpps68z.b[1][0]++;cov_13sqpps68z.s[8]++;found.push(1);}else{cov_13sqpps68z.b[1][1]++;cov_13sqpps68z.s[9]++;found.push(0);}});let total=(cov_13sqpps68z.s[10]++,found.reduce((t,value)=>{cov_13sqpps68z.f[4]++;cov_13sqpps68z.s[11]++;return t+value;}));cov_13sqpps68z.s[12]++;if(total>=1){cov_13sqpps68z.b[2][0]++;cov_13sqpps68z.s[13]++;return;}else{cov_13sqpps68z.b[2][1]++;}cov_13sqpps68z.s[14]++;throw new Error(`Expected one of the following parameters, but found none: ${expected_keys.join(", ")}`);};cov_13sqpps68z.s[15]++;module.exports={options,one};